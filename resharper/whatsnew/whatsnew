<!DOCTYPE html>
<html lang="en">
<head>

                                            
        <!-- Error reporting -->
<script>(function(){
  window.reportError = function(msg, file, line, col, err, isUnhandledRejection){};
  var prevOnError = window.onerror;
  var onError = function(msg, file, line, col, err) {
    reportError(msg, file, line, col, err, false);
    prevOnError && prevOnError.apply(window, arguments);
    return false;
  };
  window.onerror = onError;
  // Setup reporting for unhandled Promise rejection errors
  window.addEventListener("unhandledrejection", function(e) {
    if (!e.reason) return;
    var l = getSrcLocation(e.reason);
    reportError(e.reason.message, l.file, l.line, l.col, e.reason, true);
  });
  // Setup reporting for console.error and console.warn calls
  patchConsole('error');
  patchConsole('warn');
  // Utility functions
  function patchConsole(fnName) {
    var fn = console[fnName];
    console[fnName] = function() {
      fn.apply(console, arguments);
      var l; try {
        throw new Error('_');
      } catch (err) {
        l = getSrcLocation(err, 1);
      }
      var msg = 'console.' + fnName + ': ' + Array.prototype.join.call(arguments, ' ');
      reportError(msg, l.file, l.line, l.col, undefined, false);
    };
  }
  function getSrcLocation(err, sd) {
    var s = err && err.stack;
    var l = s && s.split("\n")[1 + (sd|0)];
    var r = l && (/^\s*at [^(]*\((.*?):(\d+)(:\d+)?\)$/.exec(l) || /^\s*at (.*?):(\d+)(:\d+)?$/.exec(l));
    return r ? {file: r[1], line: r[2], col: r[3]} : {};
  }
})();</script>
<!-- Error reporting -->        <!-- Google Tag Manager -->
<script>(function() {
  // Initialize Tag Manager queue
  window.dataLayer = window.dataLayer || [];
  window.gtmLoaded = false;
  // Setup reporting for errors that occurred before Tag Manager initialized
  var prevReportError = window.reportError;
  var reportError = function(msg, file, line, col, err, isUnhandledRejection) {
    if (!window.gtmLoaded || isUnhandledRejection) {
      // Reproduce the behavior of the Tag Manager error handler
      window.dataLayer.push(makeEvt(msg, file, line));
    }
    prevReportError && prevReportError.apply(window, arguments);
  };
  window.reportError = reportError;
  // Utility functions
  function makeEvt(msg, file, line) {
    return {
      event: "gtm.pageError", "gtm.errorMessage": msg,
      "gtm.errorUrl": file, "gtm.errorLineNumber": line
    };
  }
})();</script>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
  'https://www.googletagmanager.com/gtm.js?id='+i+dl;j.addEventListener(
    'load', function(){window.gtmLoaded=true});f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-5P98');</script>
<!-- End Google Tag Manager -->        <!-- Sentry -->
<script>
    (function() {
        window.sentryLoaded = false;
        window.errorsForSentry = [];
        var prevReportError = window.reportError;
        var reportError = function(
            msg,
            file,
            line,
            col,
            err,
            isUnhandledRejection
        ) {
            if (!window.sentryLoaded) {
                window.errorsForSentry.push(err);
            }
            prevReportError && prevReportError.apply(window, arguments);
        };
        window.reportError = reportError;
    })();
</script>
<script>
    window.sentryLoad = function() {
        window.sentryLoaded = true;
        Sentry.init({
            dsn: 'https://1adb2a61713144eda0786e5af50ddc51@sentry.io/1423069',
            release:
                "jetbrainscom@a6ccaa6ddb",
            beforeSend: function(event) {
                Object.keys(event).forEach(function(key) {
                    var value = event[key];
                    if (isEmail(value)) {
                        delete event[key];
                    }
                });
                return event;
            }
        });
        Sentry.configureScope(function(scope) {
            scope.setTag('page_locale', 'en-us');
            scope.setTag('browser.locale', getPageLocale());

            scope.setTag('http.urlFull', location.href);
            var protocol = location.protocol || '';
            //omit `:` from location.protocol string
            var protocolString = protocol.substring(0, protocol.length - 1);

            scope.setTag('http.protocol', protocolString);

            scope.setTag('http.hostname', location.hostname);

            var search = location.search || '';
            //omit ? from location.search string
            var searchString = search.substr(1);
            if (searchString !== '') {
                scope.setTag('http.query', searchString || '1');
            }
            var hash = location.hash || '';
            //omit # from location.hash string
            var hashString = hash.substr(1);
            if (hashString !== '') {
                scope.setTag('http.fragment', hashString);
            }
        });
        window.errorsForSentry.forEach(Sentry.captureException);

        function getPageLocale() {
            return (
                (navigator.languages && navigator.languages[0]) ||
                navigator.language
            );
        }
        function isEmail(value) {
            var emailRegex = /[\+\-\_\.a-zA-Z0-9]+@[\-\.a-zA-Z0-9]+\.[a-zA-Z0-9]+/g;
            return emailRegex.test(value);
        }
    };
</script>
<script src="https://browser.sentry-cdn.com/5.7.1/bundle.min.js" crossorigin="anonymous" onload="sentryLoad()" async></script>
<!-- End Sentry -->    
                <title>What's New in ReSharper</title>
    
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, maximum-scale=1">

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/site.webmanifest">
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#000000">
<meta name="apple-mobile-web-app-title" content="JetBrains">
<meta name="application-name" content="JetBrains">
<meta name="msapplication-TileColor" content="#000000">
<meta name="theme-color" content="#000000">    <link rel="canonical" href="/resharper/whatsnew/" />    <!-- .61-->
        <meta class="local" content="What's new in the latest updates for ReSharper" name="description"><meta class="local" content="http://resources.jetbrains.com/storage/products/resharper/img/meta/resharper_1280x800.png" name="image"><meta class="local" content="summary_large_image" name="twitter:card"><meta class="local" content="@resharper" name="twitter:site"><meta class="local" content="What’s New in ReSharper" name="twitter:title"><meta class="local" content="What’s new in the latest updates for ReSharper" name="twitter:description"><meta class="local" content="@resharper" name="twitter:creator"><meta class="local" content="http://resources.jetbrains.com/storage/products/resharper/img/meta/resharper_1280x800.png" name="twitter:image:src"><meta class="local" content="Platforms:" name="twitter:label1"><meta class="local" content="Windows" name="twitter:data1"><meta class="local" content="What’s New in ReSharper" itemprop="name"><meta class="local" content="What’s new in the latest updates for ReSharper" itemprop="description"><meta class="local" content="http://resources.jetbrains.com/storage/products/resharper/img/meta/resharper_1280x800.png" itemprop="image">
        <link rel="alternate" hreflang="x-default" href="/resharper/whatsnew/" />

                        <link rel="alternate" hreflang="en" href="/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="de" href="/de-de/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="es" href="/es-es/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="fr" href="/fr-fr/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="ja" href="/ja-jp/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="ko" href="/ko-kr/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="ru" href="/ru-ru/resharper/whatsnew/?pr" />
                                <link rel="alternate" hreflang="zh-CN" href="/zh-cn/resharper/whatsnew/?pr" />
                                            <link rel="alternate" hreflang="x-klingon" href="/tl-aa/resharper/whatsnew/?pr" />
            
    
    
        
    
    
    <script>
        var current_lang = 'en-us';
                                    var i18n_info = {"current_lang": "en-us", "languages": [{"canonical": "en", "code": "en-us", "label": "English", "page_translated": true, "url": "/resharper/whatsnew/?pr"}, {"canonical": "de", "code": "de-de", "label": "Deutsch", "page_translated": true, "url": "/de-de/resharper/whatsnew/?pr"}, {"canonical": "es", "code": "es-es", "label": "Espa\u00f1ol", "page_translated": true, "url": "/es-es/resharper/whatsnew/?pr"}, {"canonical": "fr", "code": "fr-fr", "label": "Fran\u00e7ais", "page_translated": true, "url": "/fr-fr/resharper/whatsnew/?pr"}, {"canonical": "ja", "code": "ja-jp", "label": "\u65e5\u672c\u8a9e", "page_translated": true, "url": "/ja-jp/resharper/whatsnew/?pr"}, {"canonical": "ko", "code": "ko-kr", "label": "\ud55c\uad6d\uc5b4", "page_translated": true, "url": "/ko-kr/resharper/whatsnew/?pr"}, {"canonical": "ru", "code": "ru-ru", "label": "\u0420\u0443\u0441\u0441\u043a\u0438\u0439", "page_translated": true, "url": "/ru-ru/resharper/whatsnew/?pr"}, {"canonical": "zh-CN", "code": "zh-cn", "label": "\u7b80\u4f53\u4e2d\u6587", "page_translated": true, "url": "/zh-cn/resharper/whatsnew/?pr"}, {"canonical": "pt-BR", "code": "pt-br", "label": "Portugu\u00eas do Brasil", "page_translated": false, "url": "/pt-br/resharper/whatsnew/?pr"}, {"canonical": "x-klingon", "code": "tl-aa", "label": "tlhIngan Hol", "page_translated": true, "url": "/tl-aa/resharper/whatsnew/?pr"}]};
                            var navigationMenu = {"primary": {"id": "main_v2", "items": [{"id": "tools", "title": "Tools", "descriptionTitle": "Toolbox App", "descriptionLogoId": "toolbox", "descriptionLink": "Learn more", "descriptionUrl": "/toolbox-app/", "description": "Manage your tools the easy way", "src": "/img/banners-menu-main/toolbox-vertical.png", "horisontalSrc": "/img/banners-menu-main/toolbox-horisontal.png", "bgColor": "#3E0598", "isVisible": true, "hasCategories": true, "items": [{"title": "IDEs", "items": [{"isActive": false, "id": "appcode", "title": "AppCode", "url": "/objc/", "logoLeftActionId": "appcode", "items": [], "cleaned_url": "/objc/"}, {"isActive": false, "id": "clion", "title": "CLion", "url": "/clion/", "logoLeftActionId": "clion", "items": [], "cleaned_url": "/clion/"}, {"isActive": false, "id": "datalore", "title": "Datalore", "url": "https://datalore.io/", "isExternalLink": true, "logoLeftActionId": "datalore", "items": [], "cleaned_url": "https://datalore.io/"}, {"isActive": false, "id": "datagrip", "title": "DataGrip", "url": "/datagrip/", "logoLeftActionId": "datagrip", "items": [], "cleaned_url": "/datagrip/"}, {"isActive": false, "id": "goland", "title": "GoLand", "url": "/go/", "logoLeftActionId": "goland", "items": [], "cleaned_url": "/go/"}, {"isActive": false, "id": "idea", "title": "IntelliJ IDEA", "url": "/idea/", "logoLeftActionId": "intellij-idea", "items": [], "cleaned_url": "/idea/"}, {"isActive": false, "id": "phpstorm", "title": "PhpStorm", "url": "/phpstorm/", "logoLeftActionId": "phpstorm", "items": [], "cleaned_url": "/phpstorm/"}, {"isActive": false, "id": "pycharm", "title": "PyCharm", "url": "/pycharm/", "logoLeftActionId": "pycharm", "items": [], "cleaned_url": "/pycharm/"}, {"isActive": false, "id": "rider", "title": "Rider", "url": "/rider/", "logoLeftActionId": "rider", "items": [], "cleaned_url": "/rider/"}, {"isActive": false, "id": "rubymine", "title": "RubyMine", "url": "/ruby/", "logoLeftActionId": "rubymine", "items": [], "cleaned_url": "/ruby/"}, {"isActive": false, "id": "webstorm", "title": "WebStorm", "url": "/webstorm/", "logoLeftActionId": "webstorm", "items": [], "cleaned_url": "/webstorm/"}, {"isActive": false, "id": "toolbox", "type": "special", "title": "Toolbox App", "url": "/toolbox-app/", "logoLeftId": "toolbox", "description": "A control panel for your tools and projects", "items": [], "cleaned_url": "/toolbox-app/"}]}, {"title": ".NET & VISUAL STUDIO", "items": [{"isActive": false, "id": "resharper", "title": "ReSharper", "url": "/resharper/", "logoLeftActionId": "resharper", "items": [], "cleaned_url": "/resharper/"}, {"isActive": false, "id": "rider", "title": "Rider", "url": "/rider/", "logoLeftActionId": "rider", "items": [], "cleaned_url": "/rider/"}, {"isActive": false, "id": "resharper-cpp", "title": "ReSharper C++", "url": "/resharper-cpp/", "logoLeftActionId": "resharper-cpp", "items": [], "cleaned_url": "/resharper-cpp/"}, {"isActive": false, "id": "dotcover", "title": "dotCover", "url": "/dotcover/", "logoLeftActionId": "dotcover", "items": [], "cleaned_url": "/dotcover/"}, {"isActive": false, "id": "dotmemory", "title": "dotMemory", "url": "/dotmemory/", "logoLeftActionId": "dotmemory", "items": [], "cleaned_url": "/dotmemory/"}, {"isActive": false, "id": "dotpeek", "title": "dotPeek", "url": "/decompiler/", "logoLeftActionId": "dotpeek", "items": [], "cleaned_url": "/decompiler/"}, {"isActive": false, "id": "dottrace", "title": "dotTrace", "url": "/profiler/", "logoLeftActionId": "dottrace", "items": [], "cleaned_url": "/profiler/"}]}, {"title": "TEAM TOOLS", "items": [{"isActive": false, "id": "teamcity", "title": "TeamCity", "url": "/teamcity/", "logoLeftActionId": "teamcity", "items": [], "cleaned_url": "/teamcity/"}, {"isActive": false, "id": "upsource", "title": "Upsource", "url": "/upsource/", "logoLeftActionId": "upsource", "items": [], "cleaned_url": "/upsource/"}, {"isActive": false, "id": "youtrack", "title": "YouTrack", "url": "/youtrack/", "logoLeftActionId": "youtrack", "items": [], "cleaned_url": "/youtrack/"}, {"isActive": false, "id": "hub", "title": "Hub", "url": "/hub/", "logoLeftActionId": "hub", "items": [], "cleaned_url": "/hub/"}]}, {"title": "PLUGIN MARKETPLACE", "items": [{"isActive": false, "id": "bigdata", "title": "Big Data Tools", "url": "https://plugins.jetbrains.com/plugin/12494-big-data-tools", "isExternalLink": true, "items": [], "cleaned_url": "https://plugins.jetbrains.com/plugin/12494-big-data-tools"}, {"isActive": false, "id": "rustsupport", "title": "Rust", "url": "https://plugins.jetbrains.com/plugin/8182-rust", "isExternalLink": true, "items": [], "cleaned_url": "https://plugins.jetbrains.com/plugin/8182-rust"}, {"isActive": false, "id": "scalaplugin", "title": "Scala", "url": "https://plugins.jetbrains.com/plugin/1347-scala", "isExternalLink": true, "items": [], "cleaned_url": "https://plugins.jetbrains.com/plugin/1347-scala"}, {"isActive": false, "id": "idethemes", "title": "IDE Themes", "url": "https://plugins.jetbrains.com/search?tags=Theme", "isExternalLink": true, "items": [], "cleaned_url": "https://plugins.jetbrains.com/search?tags=Theme"}, {"isActive": false, "id": "plugins", "title": "All Plugins", "url": "https://plugins.jetbrains.com/", "isExternalLink": true, "items": [], "cleaned_url": "https://plugins.jetbrains.com/"}]}, {"title": "EDUCATION", "items": [{"isActive": false, "id": "pycharm-edu", "title": "PyCharm Edu", "url": "/education/", "urlHash": "#lang=python&role=learner", "logoLeftActionId": "pycharm-edu", "items": [], "cleaned_url": "/education/"}, {"isActive": false, "id": "idea-edu", "title": "IntelliJ IDEA Edu", "url": "/education/", "urlHash": "#lang=java&role=learner", "logoLeftActionId": "intellij-idea", "items": [], "cleaned_url": "/education/"}, {"isActive": false, "id": "jb-academy", "title": "JB Academy", "url": "/academy/", "items": [], "cleaned_url": "/academy/"}]}]}, {"id": "languages", "title": "Languages", "descriptionTitle": "Kotlin/Everywhere", "descriptionLogoId": "header-kotlin-everywhere", "descriptionLink": "Join in!", "descriptionUrl": "//everywhere.kotlinlang.org", "description": "A worldwide event series for learning the best Kotlin practices on all platforms", "descriptionBig": true, "src": "/img/banners-menu-main/kotlin-vertical.png", "horisontalSrc": "/img/banners-menu-main/kotlin-horisontal.png", "bgColor": "#D6721C", "isExternalLink": true, "isVisible": true, "hasCategories": false, "items": [{"isActive": false, "id": "kotlin", "title": "Kotlin", "url": "https://kotlinlang.org/", "isExternalLink": true, "logoLeftId": "header-kotlin-grayscale", "logoLeftActionId": "kotlin", "logoLeftSize": "50", "description": "Programming language \n for JVM & Android", "items": [], "cleaned_url": "https://kotlinlang.org/"}, {"isActive": false, "id": "mps", "title": "MPS", "url": "/mps/", "logoLeftId": "header-mps-grayscalse", "logoLeftActionId": "mps", "logoLeftSize": "50", "description": "Create your own domain-specific language", "items": [], "cleaned_url": "/mps/"}]}, {"id": "solutions", "title": "Solutions", "descriptionTitle": "JetBrains Academy", "descriptionLogoId": "academy-logo", "descriptionLink": "Join in!", "descriptionUrl": "/academy", "description": "An educational platform for future professionals", "src": "/img/banners-menu-main/academy-vertical.png", "horisontalSrc": "/img/banners-menu-main/academy-horisontal.png", "bgColor": "#53288E", "hasCategories": false, "isVisible": true, "items": [{"isActive": false, "title": "C++ Tools", "url": "/cpp/", "logoLeftId": "header-cpp-grayscale", "logoLeftActionId": "header-cpp", "description": "Tools for C/C++ development \nfor any platform", "items": [], "cleaned_url": "/cpp/"}, {"isActive": false, "title": "For Business", "url": "/store/business/", "logoLeftId": "header-for-business-grayscale", "logoLeftActionId": "header-for-business", "description": "Wide range of tools. \nAll major technologies covered", "items": [], "cleaned_url": "/store/business/"}, {"isActive": false, "title": "Game Development", "url": "/gamedev/", "logoLeftId": "header-gamedev-grayscale", "logoLeftActionId": "header-gamedev", "description": "Tools for game development \nfor any platform", "items": [], "cleaned_url": "/gamedev/"}, {"isActive": false, "title": "DevOps", "url": "/devops/", "logoLeftId": "header-devops-grayscale", "logoLeftActionId": "header-devops", "description": "Tools and integrations \nfor any infrastructure", "items": [], "cleaned_url": "/devops/"}, {"isActive": false, "title": "Education", "url": "/education/", "logoLeftId": "header-education-grayscale", "logoLeftActionId": "header-education", "description": "Products to learn and teach programming", "items": [], "cleaned_url": "/education/"}]}, {"id": "support", "title": "Support", "description": "Pricing and licensing for businesses and individuals", "descriptionTitle": "JetBrains Store", "descriptionLogoId": "header-store", "descriptionUrl": "/store/?fromMenu#edition=commercial", "descriptionLink": "visit store", "isVisible": true, "hasCategories": true, "items": [{"title": "CUSTOMERS", "items": [{"isActive": false, "title": "Sales Support", "url": "/support/sales/", "description": "Orders, payments", "items": [], "cleaned_url": "/support/sales/"}, {"isActive": false, "title": "Product Support", "url": "/support/", "description": "Tech support, documentation", "items": [], "cleaned_url": "/support/"}]}, {"title": "COMMUNITY PROGRAMS", "items": [{"isActive": false, "title": "Education", "url": "/community/education/", "description": "Students, classrooms, training", "items": [], "cleaned_url": "/community/education/"}, {"isActive": false, "title": "Open Source", "url": "/community/opensource/", "description": "Projects support", "items": [], "cleaned_url": "/community/opensource/"}, {"isActive": false, "title": "Sponsorship", "url": "/community/support/", "description": "User groups, events, technology experts", "items": [], "cleaned_url": "/community/support/"}]}]}, {"id": "company", "title": "Company", "isVisible": true, "hasCategories": true, "items": [{"title": "INITIATIVES", "items": [{"isActive": false, "title": "Open Source", "url": "/opensource/", "description": "Projects, contributions", "items": [], "cleaned_url": "/opensource/"}, {"isActive": false, "title": "Research", "url": "/research/", "description": "Market, Scientific", "items": [], "cleaned_url": "/research/"}]}, {"title": "COMPANY", "items": [{"isActive": false, "title": "About", "url": "/company/", "description": "People, customers, awards", "items": [], "cleaned_url": "/company/"}, {"isActive": false, "title": "Brand Assets", "url": "/company/brand/", "description": "Guidelines, logos", "items": [], "cleaned_url": "/company/brand/"}, {"isActive": false, "title": "Careers", "url": "/careers/apply/", "description": "Jobs, internships", "items": [], "cleaned_url": "/careers/apply/"}, {"isActive": false, "title": "Events", "url": "/company/events/", "description": "Conferences, meetups", "items": [], "cleaned_url": "/company/events/"}, {"isActive": false, "title": "Contacts", "url": "/company/contacts/", "description": "Partners, resellers, Kotlin training", "items": [], "cleaned_url": "/company/contacts/"}]}, {"title": "RESOURCES", "items": [{"isActive": false, "title": "Newsletters", "url": "/resources/newsletters/", "items": [], "cleaned_url": "/resources/newsletters/"}, {"isActive": false, "title": "Webinars", "url": "/resources/webinars/", "items": [], "cleaned_url": "/resources/webinars/"}, {"isActive": false, "title": "Early Access", "url": "/resources/eap/", "items": [], "cleaned_url": "/resources/eap/"}, {"isActive": false, "title": "Blog", "url": "//blog.jetbrains.com/", "isExternalLink": true, "items": [], "cleaned_url": "//blog.jetbrains.com/"}]}]}, {"isActive": false, "id": "store", "url": "/store/?fromNavMenu", "title": "Store", "isVisible": true, "hasCategories": false, "items": [], "cleaned_url": "/store/?fromNavMenu"}]}, "secondary": {"isActive": true, "id": "product_resharper", "logoId": "resharper", "url": "/resharper/", "title": "ReSharper", "items": [{"isActive": true, "title": "What's New", "url": "/resharper/whatsnew/", "label": "2019.2", "items": [{"isActive": false, "title": "What's New in ReSharper 10", "url": "/resharper/whatsnew/whatsnew_10.html", "items": [], "cleaned_url": "/resharper/whatsnew/whatsnew_10.html"}, {"isActive": false, "title": "What's New in ReSharper 9", "url": "/resharper/whatsnew/whatsnew_9.html", "items": [], "cleaned_url": "/resharper/whatsnew/whatsnew_9.html"}, {"isActive": false, "title": "What's New in ReSharper 8", "url": "/resharper/whatsnew/whatsnew_8.html", "items": [], "cleaned_url": "/resharper/whatsnew/whatsnew_8.html"}], "cleaned_url": "/resharper/whatsnew/"}, {"isActive": false, "title": "Early Access", "url": "/resharper/eap/", "items": [], "cleaned_url": "/resharper/eap/"}, {"isActive": false, "title": "Features", "url": "/resharper/features/", "items": [{"isActive": false, "title": "Code Analysis", "url": "/resharper/features/code_analysis.html", "items": [], "cleaned_url": "/resharper/features/code_analysis.html"}, {"isActive": false, "title": "Quick-Fixes", "url": "/resharper/features/quick_fixes.html", "items": [], "cleaned_url": "/resharper/features/quick_fixes.html"}, {"isActive": false, "title": "Context Actions", "url": "/resharper/features/context_actions.html", "items": [], "cleaned_url": "/resharper/features/context_actions.html"}, {"isActive": false, "title": "Refactorings", "url": "/resharper/features/code_refactoring.html", "items": [], "cleaned_url": "/resharper/features/code_refactoring.html"}, {"isActive": false, "title": "Navigation and Search", "url": "/resharper/features/navigation_search.html", "items": [], "cleaned_url": "/resharper/features/navigation_search.html"}, {"isActive": false, "title": "Coding Assistance", "url": "/resharper/features/coding_assistance.html", "items": [], "cleaned_url": "/resharper/features/coding_assistance.html"}, {"isActive": false, "title": "Code Completion", "url": "/resharper/features/code_completion.html", "items": [], "cleaned_url": "/resharper/features/code_completion.html"}, {"isActive": false, "title": "Project Level Features", "url": "/resharper/features/project_level.html", "items": [], "cleaned_url": "/resharper/features/project_level.html"}, {"isActive": false, "title": "Code Generation", "url": "/resharper/features/code_generation.html", "items": [], "cleaned_url": "/resharper/features/code_generation.html"}, {"isActive": false, "title": "Code Templates", "url": "/resharper/features/code_templates.html", "items": [], "cleaned_url": "/resharper/features/code_templates.html"}, {"isActive": false, "title": "Code Style", "url": "/resharper/features/code_formatting.html", "items": [], "cleaned_url": "/resharper/features/code_formatting.html"}, {"isActive": false, "title": "Debugging Assistance", "url": "/resharper/features/debugging_assistance.html", "items": [], "cleaned_url": "/resharper/features/debugging_assistance.html"}, {"isActive": false, "title": "Unit Testing", "url": "/resharper/features/unit_testing.html", "items": [], "cleaned_url": "/resharper/features/unit_testing.html"}, {"isActive": false, "title": "Internationalization", "url": "/resharper/features/internationalization.html", "items": [], "cleaned_url": "/resharper/features/internationalization.html"}, {"isActive": false, "title": "ASP.NET and ASP.NET MVC Tools", "url": "/resharper/features/asp_net_editor.html", "items": [], "cleaned_url": "/resharper/features/asp_net_editor.html"}, {"isActive": false, "title": "JavaScript and TypeScript Tools", "url": "/resharper/features/javascript_typescript.html", "items": [], "cleaned_url": "/resharper/features/javascript_typescript.html"}, {"isActive": false, "title": "XAML Editing Tools", "url": "/resharper/features/xaml_editor.html", "items": [], "cleaned_url": "/resharper/features/xaml_editor.html"}, {"isActive": false, "title": "NAnt and MSBuild Scripts Editing", "url": "/resharper/features/nant_msbuild_script.html", "items": [], "cleaned_url": "/resharper/features/nant_msbuild_script.html"}, {"isActive": false, "title": "Command Line Tools", "url": "/resharper/features/command-line.html", "items": [], "cleaned_url": "/resharper/features/command-line.html"}], "cleaned_url": "/resharper/features/"}, {"isActive": false, "title": "Docs", "url": "/resharper/documentation/", "items": [], "cleaned_url": "/resharper/documentation/"}, {"isActive": false, "title": "Blog & Social", "url": "/resharper/social/", "items": [], "cleaned_url": "/resharper/social/"}, {"isActive": false, "title": "Plugins", "url": "/resharper/plugins/", "items": [{"isActive": false, "title": "ReSharper Plugin Directory", "url": "/resharper/plugins/list.html", "items": [], "cleaned_url": "/resharper/plugins/list.html"}], "cleaned_url": "/resharper/plugins/"}, {"isActive": false, "title": "Buy", "url": "/resharper/buy/", "items": [], "cleaned_url": "/resharper/buy/"}, {"isActive": false, "title": "Download", "url": "/resharper/download/", "type": "button", "items": [{"isActive": false, "title": "ReSharper Ultimate System Requirements", "url": "/resharper/download/system_requirements.html", "items": [], "cleaned_url": "/resharper/download/system_requirements.html"}], "cleaned_url": "/resharper/download/"}], "cleaned_url": "/resharper/"}};
        
        var is_layout_adaptive = false;
        
        var disable_language_picker = false;
        
        var english_only_url_prefixes = [];
            </script>
    
            <script></script>
    
        
    
            <link href="/_assets/common.d44d81f300d3bff87efe.css" rel="stylesheet" type="text/css">
<link href="/_assets/default-page.fabf52db4bf34ea78af0.css" rel="stylesheet" type="text/css">
<link href="/_assets/resharper/whatsnew/index.entry.c64905f064fb7bb238f9.css" rel="stylesheet" type="text/css">
        <script src="/_assets/common.34604685b633d15ae3ed.js" type="text/javascript"></script>
<script src="/_assets/default-page.2e180fc15a6b94fe7fa3.js" type="text/javascript"></script>
<script src="/_assets/resharper/whatsnew/index.entry.5f41266a9ad26965e70f.js" type="text/javascript"></script>
    
            <!-- Social Media tag Starts -->
    <!-- Open Graph data -->
            <meta property="og:title" content="What's New in ReSharper"/>
    
                    <meta property="og:description" content="What's new in the latest updates for ReSharper"/>
    <meta property="og:image" content="http://resources.jetbrains.com/storage/products/resharper/img/meta/resharper_1280x800.png"/>

    <meta property="og:site_name" content="JetBrains"/>
    <meta property="og:type" content="website"/>
    <meta property="og:url" content="https://www.jetbrains.com/resharper/whatsnew/"/>
    <!-- Social Media tag Ends -->
</head>

<body class="nojs  ">

<!-- Google Tag Manager (noscript) -->
<noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-5P98" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<!-- End Google Tag Manager (noscript) -->
<script>
/*! modernizr 3.2.0 (Custom Build) | MIT *
 * http://modernizr.com/download/?-flexbox-flexboxtweener !*/
!function(e,n,t){function r(e,n){return typeof e===n}function o(){var e,n,t,o,i,s,l;for(var f in v)if(v.hasOwnProperty(f)){if(e=[],n=v[f],n.name&&(e.push(n.name.toLowerCase()),n.options&&n.options.aliases&&n.options.aliases.length))for(t=0;t<n.options.aliases.length;t++)e.push(n.options.aliases[t].toLowerCase());for(o=r(n.fn,"function")?n.fn():n.fn,i=0;i<e.length;i++)s=e[i],l=s.split("."),1===l.length?Modernizr[l[0]]=o:(!Modernizr[l[0]]||Modernizr[l[0]]instanceof Boolean||(Modernizr[l[0]]=new Boolean(Modernizr[l[0]])),Modernizr[l[0]][l[1]]=o),C.push((o?"":"no-")+l.join("-"))}}function i(e,n){return!!~(""+e).indexOf(n)}function s(e){return e.replace(/([a-z])-([a-z])/g,function(e,n,t){return n+t.toUpperCase()}).replace(/^-/,"")}function l(e,n){return function(){return e.apply(n,arguments)}}function f(e,n,t){var o;for(var i in e)if(e[i]in n)return t===!1?e[i]:(o=n[e[i]],r(o,"function")?l(o,t||n):o);return!1}function a(e){return e.replace(/([A-Z])/g,function(e,n){return"-"+n.toLowerCase()}).replace(/^ms-/,"-ms-")}function u(){return"function"!=typeof n.createElement?n.createElement(arguments[0]):b?n.createElementNS.call(n,"http://www.w3.org/2000/svg",arguments[0]):n.createElement.apply(n,arguments)}function d(){var e=n.body;return e||(e=u(b?"svg":"body"),e.fake=!0),e}function p(e,t,r,o){var i,s,l,f,a="modernizr",p=u("div"),c=d();if(parseInt(r,10))for(;r--;)l=u("div"),l.id=o?o[r]:a+(r+1),p.appendChild(l);return i=u("style"),i.type="text/css",i.id="s"+a,(c.fake?c:p).appendChild(i),c.appendChild(p),i.styleSheet?i.styleSheet.cssText=e:i.appendChild(n.createTextNode(e)),p.id=a,c.fake&&(c.style.background="",c.style.overflow="hidden",f=_.style.overflow,_.style.overflow="hidden",_.appendChild(c)),s=t(p,e),c.fake?(c.parentNode.removeChild(c),_.style.overflow=f,_.offsetHeight):p.parentNode.removeChild(p),!!s}function c(n,r){var o=n.length;if("CSS"in e&&"supports"in e.CSS){for(;o--;)if(e.CSS.supports(a(n[o]),r))return!0;return!1}if("CSSSupportsRule"in e){for(var i=[];o--;)i.push("("+a(n[o])+":"+r+")");return i=i.join(" or "),p("@supports ("+i+") { #modernizr { position: absolute; } }",function(e){return"absolute"==getComputedStyle(e,null).position})}return t}function m(e,n,o,l){function f(){d&&(delete E.style,delete E.modElem)}if(l=r(l,"undefined")?!1:l,!r(o,"undefined")){var a=c(e,o);if(!r(a,"undefined"))return a}for(var d,p,m,h,y,v=["modernizr","tspan"];!E.style;)d=!0,E.modElem=u(v.shift()),E.style=E.modElem.style;for(m=e.length,p=0;m>p;p++)if(h=e[p],y=E.style[h],i(h,"-")&&(h=s(h)),E.style[h]!==t){if(l||r(o,"undefined"))return f(),"pfx"==n?h:!0;try{E.style[h]=o}catch(g){}if(E.style[h]!=y)return f(),"pfx"==n?h:!0}return f(),!1}function h(e,n,t,o,i){var s=e.charAt(0).toUpperCase()+e.slice(1),l=(e+" "+x.join(s+" ")+s).split(" ");return r(n,"string")||r(n,"undefined")?m(l,n,o,i):(l=(e+" "+S.join(s+" ")+s).split(" "),f(l,n,t))}function y(e,n,r){return h(e,t,t,n,r)}var v=[],g={_version:"3.2.0",_config:{classPrefix:"",enableClasses:!0,enableJSClass:!0,usePrefixes:!0},_q:[],on:function(e,n){var t=this;setTimeout(function(){n(t[e])},0)},addTest:function(e,n,t){v.push({name:e,fn:n,options:t})},addAsyncTest:function(e){v.push({name:null,fn:e})}},Modernizr=function(){};Modernizr.prototype=g,Modernizr=new Modernizr;var C=[],w="Moz O ms Webkit",x=g._config.usePrefixes?w.split(" "):[];g._cssomPrefixes=x;var S=g._config.usePrefixes?w.toLowerCase().split(" "):[];g._domPrefixes=S;var _=n.documentElement,b="svg"===_.nodeName.toLowerCase(),z={elem:u("modernizr")};Modernizr._q.push(function(){delete z.elem});var E={style:z.elem.style};Modernizr._q.unshift(function(){delete E.style}),g.testAllProps=h,g.testAllProps=y,Modernizr.addTest("flexbox",y("flexBasis","1px",!0)),Modernizr.addTest("flexboxtweener",y("flexAlign","end",!0)),o(),delete g.addTest,delete g.addAsyncTest;for(var P=0;P<Modernizr._q.length;P++)Modernizr._q[P]();e.Modernizr=Modernizr}(window,document);

if (!Modernizr.flexbox && !Modernizr.flexboxtweener) {

  var $body = $('body');

  var nodesClasses = {
    wrapper: 'not-supported-browser',
    container: 'not-supported-browser__container',

    title: 'not-supported-browser__title',
    content: 'not-supported-browser__content',
    logo: 'not-supported-browser__logo'
  };

  var nodes = {
    wrapper: $('<div class="' + nodesClasses.wrapper + '"></div>'),
    title: $('<div class="' + nodesClasses.title + '">Sorry, your browser is not fully supported</div>'),
    content: $('<div class="' + nodesClasses.content + '">There may be some issues with pages layout in your current browser.<br/>Please use an alternate browser until we resolve the issues.<br/>Thank you.</div>'),
    container: $('<div class="' + nodesClasses.container + '"></div>'),
    logo: $('<div class="' + nodesClasses.logo + '"><svg class="sprite-img _jetbrains" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#jetbrains"></use></svg></div>')
  };

  $body.addClass('overflow-hidden');


  nodes.content
    .prepend(nodes.title)
    .prepend(nodes.logo);

  nodes.container
    .append(nodes.content);

  nodes.wrapper
    .append(nodes.container)
    .appendTo($body);
}
</script>
<div class="page">
                <div class="page__header">
                <header class="menu-main header"  id="js-menu-main">
    <div class="wt-container">
        <div class="wt-row wt-row_nowrap wt-row_size_s wt-row_align-items_center">
            <div class="wt-col-auto-fill">
                <a href="/" class="menu-main__logo-link"><svg class="_jetbrains-simple sprite-img menu-main__logo" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#jetbrains-simple"></use></svg></a>
            </div>
            <div class="wt-col-inline wt-display-md-none menu-main-skeleton-text-1" style="min-width: 69px"></div>
            <div class="wt-col-inline wt-display-md-none menu-main-skeleton-text-1" style="min-width: 81px"></div>
            <div class="wt-col-inline wt-display-md-none menu-main-skeleton-text-1" style="min-width: 46px"></div>
            <div class="wt-col-inline menu-main-skeleton-button"></div>
            <div class="wt-col-inline menu-main-skeleton-button"></div>
        </div>
    </div>
</header>



  <div class="menu-second" id="js-menu-second">
    <div class="wt-container">
        <div id="js-menu-second-mobile-wrapper" class="wt-display-none">
            <div id="js-menu-second-mobile" >
                <div class="menu-second-mobile wt-row wt-row_size_m wt-row_align-items_center wt-row_justify_between">
                    <div class="wt-col-inline menu-second-skeleton-text-2" style="max-width: 120px"></div>
                    <div class="wt-col-inline menu-second-skeleton-button" style="max-width: 80px"></div>
                </div>
            </div>
        </div>

        <div id="js-menu-second-desktop" class="menu-second-desktop
                       wt-row wt-row_size_0 wt-row_align-items_center">
            <div class="wt-col-auto-fill">
                <a class="menu-second-title-box"
                   href="/resharper/">
                                            <span class="menu-second-title-box__logo jetbrains-logo">
                            <svg class="_resharper sprite-img" xmlns:xlink="http://www.w3.org/1999/xlink"><use xlink:href="#resharper"></use></svg>
                        </span>
                    
                    <span class="menu-second-title-box__title wt-h3">ReSharper</span>
                </a>
            </div>

                            
                                                        <a href="/resharper/whatsnew/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                wt-text-2_hardness_primary">
                        What&#39;s New
                         2019.2                    </a>
                                            
                                                        <a href="/resharper/eap/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Early Access
                                            </a>
                                            
                                                        <a href="/resharper/features/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Features
                                            </a>
                                            
                                                        <a href="/resharper/documentation/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Docs
                                            </a>
                                            
                                                        <a href="/resharper/social/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Blog &amp; Social
                                            </a>
                                            
                                                        <a href="/resharper/plugins/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Plugins
                                            </a>
                                            
                                                        <a href="/resharper/buy/"
                       class="wt-col-inline wt-text-2 wt-text-2_hardness_average menu-second__link
                                                                ">
                        Buy
                                            </a>
                                            
                            
                                                    
                            <a href="/resharper/download/"
                   class="wt-col-inline menu-second__download-button wt-button wt-button_size_s wt-button_mode_primary">
                    Download
                </a>
                    </div>

    </div>
</div>

            </div>
    
    <div class="page__content ">
        <nav class="js-add-side-toc"></nav>
<header class="whatsnew-header">
<div class="whatsnew-header__top wt-container article-content">
<h1 class="no-margin-top _big">What′s New in ReSharper</h1>
<div class="wt-row wt-row_size_m">
<div class="wt-col-10">
<p class="sub-title"><span class="text-nowrap">ReSharper Ultimate 2019.2</span> delivers better
                        support for C# 8.0 and a few updates in Navigation, Find Usages, and the debugger data tips.
                        It also improves startup times and offers initial support for the “Per-Monitor DPI Awareness”
                        mode in VS 2019.
                        Indexing for C++ projects is faster, and more C++ 20 features are supported.
                    </p>
</div>
</div>
<div class="button-group _align-left">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                        trial
                    </div>
</div>
</div>
</div>
</header>
<section class="section-content _bg-medium version-2019-2" id="v2019-2">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2019.2</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Enhanced C# support" src="/resharper/features/screenshots/20192/cs@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C# support" title="C# support">Enhanced C# support</h3>
<p>Take full advantage of C# 8 with ReSharper’s enhanced support:</p>
<ul>
<li>Supports the latest changes in <em>indices</em> and <em>ranges</em> such as indexable
                                and rangeable types.
                            </li>
<li>The context action <em>Add range check</em> now supports indexing by
                                <em>System.Index</em>/<em>System.Range</em> and produces correct checks.
                            </li>
<li>Supports unmanaged generic structs.</li>
<li>Two new inspections, ‘<em>Convert switch statement to switch expression</em>’ and ‘<em>Convert
                                chain of ternary expressions to switch expression</em>’, with a corresponding ‘<em>Convert
                                to switch expression</em>’ quick-fix.
                            </li>
</ul>
<p>You asked and we delivered: the context action <em>Convert concatenation to interpolation</em> can now be applied in scope.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<a class="js-popup popup _with-icon _show-img" href="/resharper/features/screenshots/20192/perfguide@2x.png" title="Faster startup times" width="1210">
<img alt="Faster startup times" src="/resharper/features/screenshots/20192/perfguide-thumbnail@2x.png" style="max-width: 605px;"></a>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Faster startup times" title="Faster startup times">Faster startup times</h3>
<p>Borrowing from Rider, we’ve started using the MSBuild-based project model instead of the
                            Visual Studio COM API. This will help optimize solution loading times as we’ve minimized the
                            use of COM API, which locks the UI thread.</p>
<p>In addition, we’ve updated the Performance Guide page. It has a new Windows Defender section
                            and descriptions for all performance tips, which describe what exactly will be done after a
                            suggestion is applied.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Navigations and Find Usages" src="/resharper/features/screenshots/20192/navigation@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigations and Find Usages" title="Navigations and Find Usages">Navigations and Find
                            Usages</h3>
<p>In this release, <em>Find Usages</em> starts using the data from <em>Solution Wide Error
                            Analysis</em> to gather the results. If you enable <em>SWEA</em> for your solution, <em>Find
                            Usage</em> will show you results significantly faster.</p>
<p>We’ve added a couple of small improvements to Navigation and hope you will find them
                            useful:&nbsp;</p>
<ul>
<li>You can search in a file right through the “<em>Go to File Member</em>”
                                dialog. The list of results will have the names of all matching members <em>and</em> all
                                the places where the search string appears in the file.
                            </li>
<li>In the <em>Go To Text</em> results window, you can now filter out the comment lines if
                                you are not interested in looking for occurrences in comment strings.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Debugger data tips" src="/resharper/features/screenshots/20192/data-tips@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Debugger data tips" title="Debugger data tips">Debugger Data Tips</h3>
<p>ReSharper 2019.2 brings several updates to the debugger data tips:</p>
<ul>
<li>We’ve added a couple of new toggles: <em>implicit function evaluation </em>and
                                <em>auto evaluate property</em>.
                            </li>
<li>They respect the setting “<em>Enable property evaluation and other implicit
                                function calls</em>” and can evaluate property values on demand.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Code style & code formatter" src="/resharper/features/screenshots/20192/editor-config@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code Formatter" title="Code Formatter">Code style & code formatter</h3>
<p>To improve C# 8.0 support, we added new formatting options for <em>switch</em> expressions.
                            Support for <em>.editorconfig</em>, <em>StyleCop.Settings</em>, and <em>.clang-format </em>now
                            performs better and is switched on by default for highlighting and Solution Wide Error
                            Analysis. You can also edit <em>EditorConfig</em> properties right inside the Options page.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Support for “Per-Monitor DPI Awareness” mode" src="/resharper/features/screenshots/20192/dpi-awareness@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="“Per-Monitor DPI Awareness”" title="“Per-Monitor DPI Awareness”">Support for “Per-Monitor DPI Awareness” mode</h3>
<p>ReSharper Ultimate 2019.2 offers better support for <a href="https://blog.jetbrains.com/dotnet/2019/06/11/blank-tool-windows-resharper-visual-studio-2019-net-framework-4-8-per-monitor-dpi-awareness/">the
                            “Per-Monitor DPI Awareness” mode</a> introduced in Visual Studio 2019. We know some
                            ReSharper users previously opted to disable <em>Optimize rendering for screens with
                                different pixel densities</em> (via Tools | Options | Environment | General) because of
                            the rendering issue we had with the ReSharper tool windows. Please enable it again and check
                            out how it looks. Note there might still be places where you can experience some glitches.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Other features" src="/resharper/features/screenshots/20192/il-viewer@2x.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Other features" title="Other features">Other features</h3>
<ul>
<li>Parameter name hints have performance improvements and new heuristics.</li>
<li>A new tooltip with the keyword description is available in the IL Viewer.</li>
<li>The Advanced symbols options dialog under ReSharper | Options | Tools | External Sources
                                now supports relative paths.
                            </li>
<li>The Assembly Explorer tool window now has a ‘Summary’ property on the “Properties” tab
                                and an unmanaged (win32) resources subtree.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Unreal Engine" src="/resharper-cpp/features/screenshots/20192/UE_analysis.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Unreal Engine support" title="Unreal Engine support">
                            Unreal Engine support <span class="badge">Ultimate</span></h3>
<p>In the previous release, we <a href="https://blog.jetbrains.com/rscpp/unreal-engine-rpc-support/">began to work</a> towards better support for UE4-specific Remote Procedure Calls. Now, we've updated the
                            <em>Rename</em> and <em>Change Signature</em> refactorings to work correctly on RPC functions. A few new code analysis checks are also available for UE4-based code, especially targeting the missing or incorrectly set UE4 reflection macros.</p>
<p>Following on from adding <a href="https://blog.jetbrains.com/rscpp/ue4-naming-completion/">code completion for reflection specifiers</a> in v2019.1, we've now added built-in <a href="https://docs.unrealengine.com/en-US/Programming/UnrealArchitecture/Reference/Classes/Specifiers/index.html">documentation</a> for them. It is shown in the Quick Documentation popup (<kbd>Ctrl</kbd><kbd>Q</kbd>) when the caret is located on a specifier.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="faster indexing" src="/resharper-cpp/features/screenshots/20192/faster_indexing_llvm.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Faster indexing for C++" title="Faster indexing for C++">
                            Faster indexing for C++ projects <span class="badge">Ultimate</span></h3>
<p>The new preprocessor implementation used inside <span class="text-nowrap">ReSharper C++</span> has sped up the indexing on typical solutions, like LLVM and Unreal Engine, by 15-25%.</p>
<p>See <a href="/resharper-cpp/whatsnew/">What's new in ReSharper C++</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<a class="js-popup popup _with-icon _show-img" href="/dotmemory/whatsnew/img/console_runner_192.png" title="dotMemory console profiler improvements">
<img alt="dotMemory console profiler improvements" src="/dotmemory/whatsnew/img/console_runner_192_thumb.png" style="max-width: 605px;">
</a>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="dotMemory console profiler" title="dotMemory console profiler">dotMemory console profiler improvements <span class="badge">dotMemory console profiler improvements</span> <span class="badge">Ultimate</span></h3>
<p>
                        dotMemory 2019.2 stops supporting remote profiling.
                        To offer you an adequate replacement, we significantly improved the
                        dotMemory console profiler:
                        </p><ul>
<li>
                                The console profiler gets commands to profile all types of applications
                                including .NET Core applications, IIS Express-hosted applications,
                                Windows services, and others.
                            </li>
<li>
                                The <code>--trigger-on-activation</code> argument allows taking
                                a memory snapshot right after this becomes possible. This feature
                                can be helpful in case you want to take a baseline snapshot and use it
                                for comparison.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2019-1" id="v2019-1">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2019.1</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Initial C# 8 support" class="js-gif" data-gif-src="/resharper/features/screenshots/20191/cs80.gif" src="/resharper/features/screenshots/20191/cs80.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Initial C# 8 support" title="Initial C# 8 support">Initial C# 8 support</h3>
<p>Most of the new language features are already supported, including:</p>
<ul><li>Ranges and index from end expressions</li>
<li>Null-coalescing assignment</li>
<li><code>Switch</code> expressions</li>
<li>Tuple expression in a <code>switch</code> statement</li>
<li><code>Static</code> local functions</li>
<li><code>Async</code> streams</li>
<li>Nullable reference types</li>
<li>Recursive patterns</li>
<li><code>using</code> declarations</li>
</ul>
<p>Typing assists for nullability annotations have been enhanced to support the features from the
                            latest language version.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2019/04/24/indices-ranges-null-coalescing-assignments-look-new-language-features-c-8/">
                                Indices, Ranges, and Null-coalescing Assignments – A Look at New language features in C# 8</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Support for Visual Studio 2019 RTM" src="/resharper/features/screenshots/20191/vs2019.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Visual Studio 2019 RTM" title="Visual Studio 2019 RTM">Support for Visual Studio 2019 RTM</h3>
<p><strong>ReSharper 2019.1</strong> supports the recent final release build of <strong>Visual
                            Studio 2019</strong>. Apart from supporting C# 8.0, there are the following notable changes:</p>
<ul>
<li>This build supports the “<strong>async packages auto-load</strong>” API in Visual Studio
                                2019.
                            </li>
<li><strong>MSTest framework</strong> in Visual Studio 2019 is supported.</li>
</ul>
<p><a href="/resharper/compare/resharper-vs-visual-studio">How is ReSharper 2019.1 better than plain Visual Studio 2019?</a></p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Code formatting update" class="js-gif" data-gif-src="/resharper/features/screenshots/20191/unindent-backspace.gif" src="/resharper/features/screenshots/20191/unindent-backspace.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code formatting update" title="Code formatting update">Code formatting update</h3>
<p>Here are the improvements we’ve made for code formatting:</p>
<ul>
<li>There’s a new typing assist to unindent the code when you press <kbd>Backspace</kbd>.</li>
<li>Now you can export all code formatting and code styles setting to a
                                <em>.editorconfig</em> file and share them with your colleagues who don’t use JetBrains
                                products.
                            </li>
<li>Detecting formatting settings works in the background.</li>
<li>Formatting inspections for indenting around child statements are ON by default.</li>
<li>Sorting using directives is compatible with <em>Visual Studio</em> and
                                <em>StyleCop </em>behavior, and it supports sorting all using directives alphabetically,
                                including <em>System</em>.
                            </li>
<li>A new built-in Code Cleanup profile is available.</li>
</ul>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2019/03/28/export-editorconfig-code-style-optimize-references-sdk-projects-resharper-2019-1-eap-updates/">
                                Export EditorConfig Code Style, Optimize References for SDK Projects, and More ReSharper
                                2019.1 Updates
                            </a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More files for Go to Text " src="/resharper/features/screenshots/20191/go-to-text.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Go to Text Update" title="Go to Text Update">More files for Go to Text</h3>
<p>The engine behind <strong>Go to Text</strong> takes into account literally all text files in
                            a solution.</p>
<p>Previously, Go to Text considered only files that had already been indexed by ReSharper.
                            ReSharper indexes only files which contain code or can help you write code, since running
                            the full indexing for other files is expensive in most cases. So, all files with “unknown”
                            file extensions were completely out of scope, meaning you could not search in non-code
                            files.</p>
<p>We’ve leveled up the engine! Now, while the results from indexed files are being displayed,
                            the engine starts searching in non-indexed text files in the background. This is very
                            helpful if you store some data in files with different extensions, such as .<em>*proj, .yml,
                                and .csv</em>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Optimize References for SDK projects" src="/resharper/features/screenshots/20191/optimize-references.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Optimize References" title="Optimize References">Optimize References for SDK projects</h3>
<p>ReSharper now also checks for unused package references in SDK projects. Use “<strong>Optimize
                            References</strong>” in the context menu for a project to analyze and optimize these
                            references. When the project does not contain any code that uses a given reference, it will
                            show as unused. Easily uninstall unused packages and keep your project’s dependency tree
                            clean!</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2019/03/28/export-editorconfig-code-style-optimize-references-sdk-projects-resharper-2019-1-eap-updates/">
                                Export EditorConfig Code Style, Optimize References for SDK Projects, and More ReSharper
                                2019.1 Updates
                            </a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Improved Extract Method refactoring" src="/resharper/features/screenshots/20191/extract-method.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Improved Extract Method" title="Improved Extract Method">Improved Extract Method refactoring</h3>
<p>The Extract Method refactoring is now even more developer-friendly. If the auto-generated
                            name for the introduced parameter is not exactly what you want, simply edit the name right
                            in the refactoring dialog, along with the introduced method name, return type, and
                            visibility. </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Hints in the code editor" src="/resharper/features/screenshots/20191/hints.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Hints in the code editor" title="Hints in the code editor">Hints in the code editor</h3>
<p>Parameter name hints now work in more places in your code. First, you may find them in an
                            attribute’s usages to display the names for the attribute’s parameters. Second, special
                            hints appear for methods marked by a <code>StringFormatMethod</code> attribute, e.g. <code>Console.WriteLine()</code>,
                            and display the index of the parameter whose value will be inserted at that position. Please
                            note that “StringFormatMethod” hints are disabled by default and can be enabled in Options.</p>
<p>In addition, we’ve introduced new code annotation hints for parameters on a method
                            declaration. They show you code annotations for a parameter calculated by ReSharper code
                            analysis if one is specified in:</p>
<ul>
<li>an overridden base method located in a parent class, or</li>
<li>an implemented method declared in parent interfaces.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Unreal Engine" src="/resharper-cpp/features/screenshots/20191/reflection_specifiers_completion_pic.png" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Unreal Engine support" title="Unreal Engine support">
                            Unreal Engine support <span class="badge">Ultimate</span></h3>
<p>With warm and cold startup times for projects significantly improved, and some special
                            performance tuning for Unreal Engine projects in particular, <span class="text-nowrap">ReSharper C++</span>
                            2019.1 is now more responsive than ever! For Unreal Engine code, there’s Unreal Engine
                            naming support, completion for reflection specifiers, special code generation and navigation
                            options for RPCs, and enhanced auto-import.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-lg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="performance" src="/resharper-cpp/features/screenshots/20191/intel_stat.PNG" style="max-width: 605px;">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Faster performance" title="Faster performance">
                            Faster performance for C++ projects <span class="badge">Ultimate</span>
</h3>
<p>ReSharper C++ 2019.1 boosts performance across many areas. Cold and warm startup is significantly
                            quicker, memory traffic is reduced during initial indexing, and the memory footprint
                            afterwards is smaller as well. We’ve also sped up <em>Search everywhere</em> and <em>Go
                                to type</em>, and made it so the <em>Go to file member</em>, <em>Go to base
                                class</em>, and <em>Go to derived class</em> searches are all now available during
                            indexing.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2018-3" id="v2018-3">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2018.3</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Inline parameter name hints for C# and VB.NET" src="/resharper/features/screenshots/20183/parameter-name-hints.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Inline parameter name hints" title="Inline parameter name hints">
                            Inline parameter name hints for C# and VB.NET</h3>
<p>We’ve added <em>parameter name</em> hints right to the code editor to make C# and
                            VB.NET code <strong>more readable</strong>.  When a literal is used in a method call ReSharper
                            annotates it with the name of the parameter, making it much easier to understand what
                            value it represents.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/11/27/inline-parameter-name-hints-c-vb-net-resharper-rider/">
                                Inline parameter name hints for C# and VB.NET in ReSharper and Rider</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Visual Studio 2019 support" src="/resharper/features/screenshots/20183/vs-2019.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="VS 2019 support" title="VS 2019 support">
                            Visual Studio 2019 Preview 1 support</h3>
<p>Starting with version 2018.3, ReSharper has early support for Visual Studio
                            2019 and can be integrated into Visual Studio 2019 Preview 1 build. Full
                            support will be available in future ReSharper updates after the official release of Visual
                                Studio 2019.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Auto-detection of formatter settings and the naming style" src="/resharper/features/screenshots/20183/detect-formating.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Formatter settings detection" title="Formatter settings detection">
                            Auto-detection of formatter settings and the naming style</h3>
<p>Have you spent a lot of time in ReSharper options trying to configure formatter settings to
                            follow your style? No more struggling! ReSharper <b>detects code formatting style
                                from your code</b> and adjusts the formatter settings accordingly (<em>ReSharper | Edit | Detect
                                formatting settings</em>).</p>
<p>ReSharper now <b>detects the naming style</b> used in the code to follow that naming
                            convention and doesn't highlight most of the entities declarations with <em>Inconsistent
                                naming</em> warnings like it used to.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/12/05/detection-code-styles-naming-resharper/">
                                Detection of code styles and naming with ReSharper</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Improved C# 7 deconstruction support" class="js-gif" data-gif-src="/resharper/features/screenshots/20183/deconstruct.gif" src="/resharper/features/screenshots/20183/deconstruct.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Deconstruction support" title="Deconstruction support">
                            Improved C# 7 deconstruction support</h3>
<p>We keep improving ReSharper’s support for C# to help you make the best use of the
                            language and improve your code with ease. In this release, <em>Go To
                                Declaration/Implementation</em> supports deconstruction declarations, new/updated <em>inspections</em>,
                            <em>quick-fixes</em>, and <em>context actions</em>.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/10/11/tuples-deconstruction-string-interpolation-improved-inspections-quick-fixes-resharper-rider-2018-3-eap/">
                                Tuples, deconstruction, string interpolation – improved inspections and quick fixes</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Inspections for parameterized NUnit tests" src="/resharper/features/screenshots/20183/nunit-inspections.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Сode inspections for NUnit" title="Сode inspections for NUnit">
                            Сode inspections for NUnit</h3>
<p>This update introduces a set of code inspections with corresponding quick-fixes and context actions to help you write
                            NUnit tests faster.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/12/12/unit-testing-receives-major-updates-resharper-rider-2018-3-eap/">
                                Unit Testing Receives Major Updates in ReSharper and Rider 2018.3</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="VB.NET 15.3 and 15.5 language support" src="/resharper/features/screenshots/20183/vb-net.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="VB.NET 15.3 and 15.5" title="VB.NET 15.3 and 15.5">
                            VB.NET 15.3 and 15.5 language support</h3>
<p>In addition to C#, ReSharper continues improving its VB.NET support and now finally
                            supports all features from the latest available VB.NET language versions, such as:
                        </p>
<ul>
<li>Named tuple inference.</li>
<li>Leading hex/binary/octal separator.</li>
<li>Non-trailing named arguments.</li>
<li><code>Private Protected</code> member access modifier.</li>
</ul>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/11/12/named-tuple-inference-leading-digit-separator-non-trailing-named-arguments-vb-net-15-3-15-5-language-features-resharper-rider/">
                                VB.NET 15.3 and 15.5 language features</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Code Analysis" src="/resharper/features/screenshots/20183/unsafe-context.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code Analysis" title="Code Analysis">
                            Code Analysis</h3>
<p>In addition to the enhanced <em>deconstruction</em> support and working with the latest VB.NET
                            versions, lots of new inspections, quick-fixes, and context actions were added to
                            C# and VB.NET code analysis for different cases, including:</p>
<ul>
<li>The <em>Set C#/VB.NET language version</em> quick-fix gets an option to
                                set the language version for all C#/VB.NET projects in a solution. It
                                works for both .NET Framework and .NET Core projects.
                            </li>
<li>A new quick-fix, <em>Allow unsafe code in this project</em>, is available.</li>
<li><em>Initialize members</em> to create and fill the object initializer.</li>
<li>And more!</li>
</ul>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/10/11/tuples-deconstruction-string-interpolation-improved-inspections-quick-fixes-resharper-rider-2018-3-eap/">
                                Tuples, deconstruction, string interpolation – improved inspections and quick fixes</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="TypeScript 3.0 support" src="/resharper/features/screenshots/20183/typescript.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="TypeScript 3.0 support" title="TypeScript 3.0 support">
                            TypeScript 3.0 support</h3>
<p>ReSharper now supports <em>TypeScript 3.0</em> and works with such new language features as:</p>
<ul>
<li>Unknown top type.</li>
<li>Optional elements in tuple types.</li>
<li>Rest elements in tuple types.</li>
<li>Rest parameters with tuple types.</li>
<li>Spread expressions with tuple types.</li>
<li>Generic rest parameters.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Initial localization support in ASP.NET Core" src="/resharper/features/screenshots/20183/localization.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Localization support" title="Localization support">
                            Initial localization support in ASP.NET Core</h3>
<p>ReSharper supports the <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/localization?view=aspnetcore-2.1">new
                            localization procedure</a> introduced in the latest ASP.NET Core to help you localize your
                            top-notch web applications in a modern way. You can make use of ReSharper’s
                            assistance in <em>Controller</em>, <em>View</em>, and resource files. Right now, it includes:</p>
<ul>
<li><em>Go to declaration</em> on the resource usage.</li>
<li>Find Usages on the resource node in a <em>resx</em> file.</li>
<li>An inspection on a resource usage if the resource declaration is missing in
                                <em>resx</em> files for different cultures, with a corresponding quick-fix.
                            </li>
<li>Most refactorings related to resources: Move, Rename, Inline, and Safe Delete.</li>
<li>Several context actions inside a resx file to modify the resource entity.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More updates" src="/resharper/features/screenshots/20183/go-to-action-options.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More updates" title="More updates">
                            More ReSharper updates</h3>
<ul>
<li>Now you can use the <em>Go To Action</em> popup to find Options pages.</li>
<li>The <em>Introduce parameter</em> refactoring is now available for local functions.</li>
<li>To make ReSharper more FIPS-compliant, we stopped using the md5 hash algorithm
                                and eliminated all its previous uses in the codebase.
                            </li>
<li>You can select which font style ReSharper Editor Adornments should inherit: Visual
                                Studio IntelliSense or Text Editor.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Even more updates" src="/resharper/features/screenshots/20183/show-in-help.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Even more updates" title="Even more updates">
                            Even more ReSharper updates</h3>
<ul>
<li><em>Show Inspection Help</em> is now available for inspections in the Inspection Results and
                                Error in Solution windows if the inspection has a corresponding help article.
                            </li>
<li>What used to be a single "Method, Property, Event" naming style is now three separate
                                ones: "Method", "Property", and "Event".
                            </li>
<li>The Code formatter in C#, JS, HTML, and XML files now takes into account the indent from the
                                previous nodes.
                            </li>
<li>A new separate code formatter option was added, for the continuous indent inside
                                initializers braces.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-6 wt-col-xlg-12">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Performance optimizations">Performance optimizations</h3>
<p>Performance was been optimized in several areas:</p>
<ul>
<li>Loading assemblies stage was refactored to speed up solution loading.</li>
<li>Keyword completion has become faster and more precise, resulting in less auto-popup
                                latency overall.
                            </li>
<li>Thanks to quick sorting of items, code completion gets faster.</li>
<li>Value Tracking now gathers results asynchronously.</li>
</ul>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Command Line Tools">Command Line Tools</h3>
<p>A couple of new keys were added to Command Line Tools:</p>
<ul>
<li><em>Verbosity</em> only saves issues of certain severity levels to the output.</li>
<li><em>Jobs</em> runs code analysis in multi-thread mode.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="C++/CLI" src="/resharper-cpp/features/screenshots/20183/cppcli.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C++/CLI and UE4 support" title="C++/CLI and UE4 support">Improved C++/CLI and UE4 support <span class="badge">Improved C++/CLI and UE4 support</span> <span class="badge">Ultimate</span></h3>
<p>Two types of project will especially benefit from this release. The first type is C++/CLI (requires <span class="text-nowrap">ReSharper Ultimate</span>), which gets new Generate actions to generate equality operators, hash function, getter and setter, constructors, and an ability to create a derived class, struct, or interface.</p>
<p>The second is Unreal Engine. To start with, the initial project opening happens much quicker now because <span class="text-nowrap">ReSharper C++</span> only parses non-engine files during the initial indexing, while the engine files are indexed in the background later. Another addition is that the reflection macros like UCLASS, USTRUCT, and UENUM are all handled much better in the editor, even if a project has never been built before.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="responsive_editor" src="/resharper-cpp/features/screenshots/20183/responsive_editor.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Performance C++" title="Performance C++">Responsive editor <span class="badge">Responsive editor</span> <span class="badge">Ultimate</span></h3>
<p><span class="text-nowrap">ReSharper C++ 2018.3</span> offers several notable performance improvements. First, <em>Find code issues</em> and <a href="/resharper/features/command-line.html">InspectCode</a> command line tool are now parallelized, which makes them significantly faster. Second, Cache loading on project reopening is now parallel as well, which makes it twice as fast on average. Finally, there are general performance improvements in code completion, initial project indexing, and file analysis.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2018-2" id="v2018-2">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2018.2</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Performance Improvements" src="/resharper/features/screenshots/20182/performance.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Performance" title="Performance">Performance improvements</h3>
<p>Every release, we make a lot of performance improvements and bug-fixes to limit <em>ReSharper’s </em>impact
                            on <em>Visual Studio</em>, increase responsiveness, and eliminate <em>UI </em>freezes. Back
                            in <strong>ReSharper 2018.1</strong>, we started publishing <a href="https://blog.jetbrains.com/dotnet/2018/05/28/introducing-resharper-performance-series/">blog
                                posts</a> about the current situation in terms of performance: where we are now, why we
                            have what we have, what fixes we’ve made in the latest release cycle, and our plans to
                            make things better.</p>
<p>For the <strong>2018.2</strong> release, we’ve made about 30 performance fixes across
                            different parts of <strong>ReSharper</strong>, from speeding up <em>EditorConfig </em>support
                            to decreasing solution loading times. More detailed information can be found in the <a href="https://blog.jetbrains.com/dotnet/2018/07/27/performance-improvements-resharper-2018-2-eap-editorconfig-support/">new
                                blog post series</a> dedicated to the ReSharper 2018.2 release.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Integrated spell checking with ReSpeller" src="/resharper/features/screenshots/20182/respeller.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Spell checking" title="Spell checking">
                            Integrated spell checking with ReSpeller</h3>
<p>This release comes with the <em>ReSpeller </em>extension to provide spell-checking
                            functionality out of the box. Just like with code analysis, <em>ReSpeller </em>scans for
                            spelling mistakes and typos in <em>identifiers</em>, <em>comments</em>, <em>string
                                literals</em>, and more, and provides quick-fixes to resolve each detected problem. By
                            default, <em>ReSpeller </em>is enabled for many of the languages <em>ReSharper </em>supports.
                            A simple way to enable/disable individual inspections and change severity is by searching
                            for “typo” in the settings (you’ll end up in <em>Code Inspection |
                                Inspection Severity</em>).</p>
<p>We can then invoke the <kbd>Alt</kbd><kbd>Enter</kbd> menu where <em>ReSpeller </em>gives us several
                            options to fix our mistake. In the menu, we can either fix the typo or add a new word to
                            <em>ReSpeller’s </em>dictionary.</p>
<p>By default, the spell checker comes with a built-in dictionary for English (United States).
                            It uses a dictionary based on <a href="http://hunspell.github.io/"><em>Hunspell</em></a>,
                            which means you can install <a href="https://github.com/wooorm/dictionaries">additional
                                languages</a> if you like.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/07/10/integrated-spell-checking-respeller-resharper-rider/">
                                Integrated spell checking with ReSpeller in ReSharper and Rider</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="C# 7.3 support" class="js-gif" data-gif-src="/resharper/features/screenshots/20182/cs-73.gif" src="/resharper/features/screenshots/20182/cs-73.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C# 7.3 support" title="C# 7.3 support">C# 7.3 support</h3>
<p>ReSharper now supports all features from the latest C# 7.3:</p>
<ul>
<li><em>Declaration expressions</em> in <em>initializers</em> and <em>queries</em>.</li>
<li><em>Tuple</em> equality.</li>
<li><code>Ref</code> assignments.</li>
<li><code>Unmanaged</code>, <code>System.Delegate</code>, and <code>System.Enum</code> constraints.</li>
<li><code>Stackalloc</code> array initializers.</li>
<li>Pattern-based <code>fixed</code> statement.</li>
<li>Indexing movable <code>fixed</code> buffers.</li>
</ul>
<p>Besides supporting the syntax, we’ve added new inspections and appropriate quick-fixes to make your code compatible with C# 7.3.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/07/12/declaration-expressions-in-initializers-and-queries/">C# 7.3 in Rider and ReSharper</a></p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Initial Blazor support" src="/resharper/features/screenshots/20182/blazor.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Blazor support" title="Blazor support">Initial Blazor support</h3>
<p>The experimental project <em>Blazor</em> is a single-page web app framework built on .NET
                            that runs in the browser with <em>WebAssembly</em>. Even though Blazor is declared
                            experimental for now, we’ve added initial support for this promising framework in
                            ReSharper. For instance, code completion includes all the possible directives like
                            <em>page </em>(routing), <em>inject </em>(service injection), and <em>function </em>(component
                            members).</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/07/17/initial-blazor-support-resharper-rider-2018-2-eap">
                                Initial Blazor support in ReSharper and Rider 2018.2</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Navigation improvements" src="/resharper/features/screenshots/20182/local-function-file-structure.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigation" title="Navigation">Navigation improvements</h3>
<p>Several small but handy new features are added in <em>Navigation</em>.</p>
<p>ReSharper introduces a long-awaited feature for <em>Search </em>&amp; <em>Navigation </em>options:
                            you can now specify ignored files by using a mask in <em>Environment | Search &amp;
                                Navigation</em>. You can exclude files from all search and navigation features, based on
                            a file extension or by folder.</p>
<p>The <em>StackTrace Explorer</em> parsing engine has been added to <strong>Search
                            Everywhere</strong>. With <strong>ReSharper 2018.2</strong>, we can now copy a function
                            signature from <em>dotTrace’s </em>/ <em>Visual Studio’s</em> Call Stack window
                            and navigate directly to the correct method overload in the codebase, by using <strong>Search
                                Everywhere</strong>.</p>
<p>Last but not least, some ReSharper features like <em>File Structure</em>, <em>Containing
                            Declaration</em>, <em>Next/Previous Members</em>, and others now take <em>local
                            functions</em> into account.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Colored Parameter Info popup and Summary tooltip for IntelliSense" src="/resharper/features/screenshots/20182/colored-parameter-info.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Parameter Info" title="Parameter Info">Colored Parameter Info popup
                            and Summary tooltip for IntelliSense</h3>
<p>This release updates the way <em>ReSharper</em> presents <em>parameter
                            information</em> in lookup item popups. For example, when using code completion in C# or
                            VB.NET, <em>ReSharper </em>displays <em>parameter types</em> and <em>method return
                                types</em> in a different color, making it easier to visually identify method overloads.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="The formatter engine update" src="/resharper/features/screenshots/20182/formatting.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Formatter engine" title="Formatter engine">The formatter engine update</h3>
<p>The formatter engine has <a href="https://blog.jetbrains.com/dotnet/2018/08/21/formatter-comments-resharper-rider-2018-2/">several new features</a>: </p>
<ul>
<li>Comments in a code file to override formatter settings can be generated directly from the <em>Configure Format</em> dialog.</li>
<li>The <em>File Formatting</em> Info tool window explicitly shows the settings affected by <em>StyleCop </em>rules.</li>
<li>The <em>Options </em>dialog can now show a <em>StyleCop </em>rule name if <em>StyleCop </em>rules override a code style/formatting setting.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="JSLint, ESLint, and TSLint" class="js-gif" data-gif-src="/resharper/features/screenshots/20182/linters.gif" src="/resharper/features/screenshots/20182/linters.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Linters" title="Linters">JSLint, ESLint, and TSLint</h3>
<p>ReSharper extends the built-in code analysis rules with support for three static analysis
                            tools: <em>JSLint</em>, <em>ESLint</em>, and <em>TSLint</em>. All of these linters help
                            ensure that JavaScript and TypeScript code is readable and maintainable. They also
                             allow adding custom rules, which can be included in <em>ReSharper</em> code analysis.
                        </p>
<p>In case a <em>Node.js</em> interpreter is already configured on your machine, you can enable
                            linters in <em>ReSharper</em> settings under <em>Tools | Web Linters.</em></p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Refactorings UI update" src="/resharper/features/screenshots/20182/refactorings-update.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Refactorings UI" title="Refactorings UI">Refactorings UI update</h3>
<p>In this release, several ReSharper refactorings have been moved to the new presentation
                            framework. Most of the improvements happen under the hood and are not visible in the UI.
                            This move helps us unify the behavior of controls across ReSharper and Rider.</p>
<p>The key visible UI changes include:</p>
<ul>
<li><em>Change Signature</em> dialog has a code completion popup for parameter type.</li>
<li><em>Extract Method</em> has a disambiguate popup which specifies whether a method or a
                                local function should be created as a result.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More ReSharper updates" src="/resharper/features/screenshots/20182/more-features.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More updates" title="More updates">More ReSharper updates</h3>
<p>Other ReSharper 2018.2 updates include:</p>
<ul>
<li><em>Fix in scope</em> quick-fixes receive more granular fixing scopes:
                                <em>Fix in method</em> and <em>Fix in class</em>.
                            </li>
<li>The code style for <em>Built-in Type</em> was improved: it gets independent
                                settings for member access expressions and "<em>fields</em>, <em>parameters</em>, <em>variable</em>"
                                declarations.
                            </li>
<li>There’s a new option to execute <em>BeforeBuild</em> and <em>AfterBuild</em> targets
                                for skipped projects in <strong>ReSharper Build</strong>.
                            </li>
<li>A new inspection to highlight misplaced text in <em>XAML</em>.</li>
<li>In <em>XML/XAML</em> support, when you press <kbd>Enter</kbd> before a closing tag on a separate line,
                                typing assist now inserts a blank line before the closing tag and leaves the caret on
                                the blank line (instead of moving it to the closing tag).</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="C++/CLI" class="js-gif" data-gif-src="/resharper-cpp/features/screenshots/20182/cppcli.gif" src="/resharper-cpp/features/screenshots/20182/cppcli.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C++/CLI support" title="C++/CLI support">Initial C++/CLI support <span class="badge">Initial C++/CLI support</span> <span class="badge">Ultimate</span></h3>
<p>C++/CLI is a set of C++ language extensions by Microsoft for easy interoperability between
                            managed and native code. With extensive support for both managed languages and C++, it is
                            only natural for ReSharper to offer help with writing code in C++/CLI too.</p>
<p>However, with so many syntactic additions and peculiar changes to the C++ language semantics
                            handling C++/CLI is no easy task. But now the wait is over — <span class="text-nowrap">ReSharper C++</span>
                            2018.2 makes C++/CLI support public, with many major features (including code inspections,
                            typing assistance, formatting, and code completion) updated to support this language
                            dialect.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="C++20 features" src="/resharper-cpp/features/screenshots/20182/cpp17.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C++17 and C++20" title="C++17 and C++20">C++17 and C++20 features <span class="badge">C++17 and C++20 features</span> <span class="badge">Ultimate</span>
</h3>
<p>ReSharper С++ 2018.2 deepens its understanding of the modern C++ language. Thanks to the added
                            support for class template argument deduction, user-defined deduction guides, fold
                            expressions, auto non-type template parameters, and more, most of the major C++17 features
                            are now supported by <span class="text-nowrap">ReSharper C++</span>.</p>
<p>As the C++20 standard is already shaping up, <span class="text-nowrap">ReSharper C++</span>
                            2018.2 learns to understand a number of C++20 features already available in major compilers,
                            specifically coroutines, designated initialization, feature test macros, and others.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2018-1" id="v2018-1">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2018.1</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Full understanding of C# 7.2" src="/resharper/features/screenshots/20181/csharp-72.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C# 7.2 support" title="C# 7.2 support">Full understanding of C#&nbsp;7.2</h3>
<p>In this release, we can definitely say that ReSharper understands the ins and outs of C#&nbsp;7.2.
                            ReSharper gets the following missing pieces to complete the puzzle:</p>
<ul>
<li>non-trailing named arguments;</li>
<li><code>private protected</code>
                                access modifier;</li>
<li>leading underscores in numeric literals;</li>
<li><code>in</code> parameter;</li>
<li><code>ref readonly</code> returns and locals;</li>
<li><code>readonly struct</code> type;</li>
<li><code>ref struct</code> type;</li>
<li>conditional <code>ref</code> operator.</li>
</ul>
<p>See also:</p>
<ul>
<li><a href="https://blog.jetbrains.com/dotnet/2018/05/07/leading-digit-separators-ref-structs-parameters-c-7-2-rider-resharper/">
                                Leading digit separators, ref structs and in parameters</a></li>
<li><a href="https://blog.jetbrains.com/dotnet/2018/05/10/readonly-structs-ref-readonly-conditional-ref-expressions-c-7-2-rider-resharper/">
                                Readonly structs, ref readonly and conditional ref expressions</a></li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Navigation improvements" class="js-gif" data-gif-src="/resharper/features/screenshots/20181/navigation-features.gif" src="/resharper/features/screenshots/20181/navigation-features.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigation improvements" title="Navigation improvements">Navigation improvements</h3>
<p><em>Go to File Member</em> has a new grouping for better presentation of more
                            than one class in a single file, and members are now sorted as they are declared in the file. </p>
<p>When searching in <em>Recent Files</em>, file search results
                            are now included and displayed right after matching recent items. This is useful
                            if you are looking for a file that didn't make it to the list of recent files.</p>
<p><em>Search Everywhere</em> has a new unit test filter to focus on code entities from
                            unit test projects if that's what you're looking for. </p>
<p>Last but not least, when you invoke <em>Find Usages</em> on a class, you can now
                            choose to restrict search results to default constructor usages if no constructors are defined in the class.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/04/20/navigation-improvements-in-resharper-2018-1/">
                                Navigation improvements in ReSharper 2018.1</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Formatter-related inspections" class="js-gif" data-gif-src="/resharper/features/screenshots/20181/formatting-inspections.gif" src="/resharper/features/screenshots/20181/formatting-inspections.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Formatter inspections" title="Formatter inspections">Formatter-related
                            inspections</h3>
<p>Every now and then, you want to be notified directly in the code when you are not following
                            formatting rules. With this in mind, ReSharper's code formatting engine introduces inspections
                            and quick-fixes for formatter-related problems: indenting, line breaks, spaces, and blank
                            lines can now be observed and fixed directly in the code editor.</p>
<p>By default, they are disabled so as not to bother anyone who doesn't care about formatting
                            during typing. Go to <em>ReSharper | Options | Code Inspection | Inspection Severity</em>
                            to see all available formatter inspections and select severity levels for those of them that you want to be notified of.</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/04/04/maintaining-consistent-code-style-formatting-inspections-resharper-2018-1/">
                            Maintaining consistent code style with
                            formatting inspections</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Enhanced C# 7 support" class="js-gif" data-gif-src="/resharper/features/screenshots/20181/desconstruction-discards.gif" src="/resharper/features/screenshots/20181/desconstruction-discards.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Enhanced C# 7 support" title="Enhanced C# 7 support">Enhanced C#&nbsp;7 support</h3>
<p>Apart from supporting the latest available C# language version, ReSharper continuously
                            improves its support for previous C# versions. In this release, we have added new code styles,
                            code inspections, quick-fixes and context actions to choose between deconstructing declarations
                            vs. <code>var</code>, as well as  work with explicit and implicit discards.</p>
<p>In addition, more ReSharper features now support deconstruction: there's a new option to deconstruct
                            a value in the <em>Introduce Variable</em> refactoring and the <code>.var</code> postfix template, a <em>deconstruct
                                iterator variable</em> option in the <code>.foreach</code> postfix template, and two new context actions, <em>Merge
                                deconstructed declaration</em> and <em>Deconstruct variable</em>.</p>
<p>See more:</p>
<ul>
<li>
<a href="https://blog.jetbrains.com/dotnet/2018/04/25/embrace-deconstruction-resharper-2018-1/">
                                    Embrace deconstruction with ReSharper 2018.1
                                </a>
</li>
<li>
<a href="https://blog.jetbrains.com/dotnet/2018/04/26/introduce-variable-iterate-merge-back-deconstruction/">
                                    Introduce variable, iterate and merge back deconstruction
                                </a>
</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More ways to specify code styles/inspection severities" src="/resharper/features/screenshots/20181/editorconfig.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="EditorConfig in action" title="EditorConfig in action">More ways to configure code
                            styles and inspection severity</h3>
<p>In this release, ReSharper starts reading code style settings
                            (<em>ReSharper | Code Editing | C# | Code Style</em>) from <code>.editorconfig</code> files and extends
                            support for <a href="https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference#language-conventions">
                                Roslyn language conventions</a>.</p>
<p><code>.editorconfig</code> can now also be used to set inspection severities for any scope:
                            for a whole solution, a project, or even a specific file.
                            At the same time, inspection severity settings can still be read from a project’s
                            <code>.dotSettings</code> file.
                            It means that projects can have different customized sets of enabled/disabled inspections
                            with different severities.</p>
<p>If you want to enable this mixed-source inspection settings mode, go to
                            <em>ReSharper | Code Inspection | Settings | General</em> and select <em>Read settings from editorconfig and project settings</em>.</p>
<p>See also:</p>
<ul>
<li><a href="https://blog.jetbrains.com/dotnet/2018/04/05/configuring-inspection-severities-editorconfig/">
                                Configuring inspection severities with EditorConfig</a></li>
<li><a href="https://blog.jetbrains.com/dotnet/2018/04/06/code-style-settings-roslyn-conventions-editorconfig/">
                                Code style settings from Roslyn conventions in EditorConfig</a></li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="StyleCop support" src="/resharper/features/screenshots/20181/stylecop-configuration.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="StyleCop support" title="StyleCop support">StyleCop support</h3>
<p>In the same way that ReSharper handles Roslyn coding conventions, it will also read StyleCop
                            rules directly from StyleCop configuration files. To enable this functionality, select <em>Enable StyleCop support</em>
                            under <em>ReSharper | Code Editing | General Formatter Style</em>.</p>
<p>When using EditorConfig files and StyleCop configuration files simultaneously, the EditorConfig
                            files will always take precedence over the StyleCop configuration files, which in turn take precedence over ReSharper's own settings.</p>
<p>To learn more, see <a href="https://blog.jetbrains.com/dotnet/2018/04/09/stylecop-code-style-settings-inspections/">
                            StyleCop code style settings and inspections</a>.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="C# 7 features comes to value tracking " class="js-gif" data-gif-src="/resharper/features/screenshots/20181/value-tracking.gif" src="/resharper/features/screenshots/20181/value-tracking.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Value tracking for C# 7" title="Value tracking for C# 7">C#&nbsp;7 features come to value
                            tracking</h3>
<p><em>Value Tracking</em> levels-up to support for some of <em>C#&nbsp;7</em> main features.
                            Even if you are using <em>ref-returning methods</em>, <em>pattern matching</em> or <em>out variables</em>,
                            <em>Value Origin/Destination</em> is now ready to help you track the value of a particular variable. </p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2018/03/12/value-tracking-updates-resharper-2018-1-eap/">
                            Value tracking updates in ReSharper 2018.1</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More love to comments" class="js-gif" data-gif-src="/resharper/features/screenshots/20181/comments.gif" src="/resharper/features/screenshots/20181/comments.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More love to comments" title="More love to comments">More love to comments</h3>
<p>ReSharper brings in a couple of new features to deal with comments in your code.</p>
<p>Comment position used by the <em>Comment code</em> action now depends on the setting
                            <em>Don't indent comments started at first column</em> under
                            <em>ReSharper | Code Editing | C# | Formatting Style | Tabs, Indents, Alignment</em>.</p>
<p>Previously, pressing <kbd>Enter</kbd>
                            inside a line comment left the code in an uncompilable
                            state. From now on, pressing the <kbd>Enter</kbd> key there splits a single comment into two
                            comments. This enables you to split a comment into any number of comments quickly.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More ReSharper updates" class="js-gif" data-gif-src="/resharper/features/screenshots/20181/more-features.gif" src="/resharper/features/screenshots/20181/more-features.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More updates" title="More updates">More ReSharper updates</h3>
<p>Other updates to ReSharper include the following:</p>
<ul>
<li>Pre-/Post-build tasks support in the <strong>ReSharper Build</strong> engine.</li>
<li>New settings for parentheses in method calls/declarations, line breaks, and wrapping
                                LINQ expressions.
                            </li>
<li>A new inspection for possibly unintended linear search in <code>ISet</code>.</li>
<li>The option <strong>Remember last search</strong> in navigation features is now enabled by default.
                                State of the option <strong>Include library types</strong> is also saved.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Continuous testing in any session" src="/dotcover/whatsnew/img/continuous_testing.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-lg">
<h3 class="features-block__title" data-title="Continuous testing UX" title="Continuous testing UX">
                            Continuous testing in any session <span class="badge">Ultimate</span>
</h3>
<p>
                            No more separate continuous testing session!
                            Continuous testing mode can now be turned on for any unit test session.
                            In dotCover 2017.3 and earlier, your continuous testing scope was limited by a
                            single continuous testing session. Now, you can have as many scopes for continuous
                            testing as you need.
                        </p>
<p>
                            After building or saving your solution, previous versions of dotCover always auto-started tests in coverage mode.
                            In 2018.1, coverage is no longer necessary: you can tell dotCover to simply run new and
                            outdated tests without covering them. This could be a great time saver if you already have
                            an up-to-date coverage snapshot.
                        </p>
<p><a href="/dotcover/whatsnew">Learn more about <span class="text-nowrap">dotCover 2018.1</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Unit Test Coverage window" src="/dotcover/whatsnew/img/unit_test_coverage_window.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-lg">
<h3 class="features-block__title" data-title="Coverage window" title="Coverage window">
                            Unit Test Coverage window <span class="badge">Ultimate</span>
</h3>
<p>
                            Coverage information is now shown in a separate <strong>Unit Test Coverage</strong> window instead of
                            a per-session <strong>Coverage</strong> tab. This helps you see
                            aggregated coverage data for all unit test sessions in one place.
                        </p>
<p><a href="/dotcover/whatsnew">Learn more about <span class="text-nowrap">dotCover 2018.1</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Debug step filters" class="js-gif" data-gif-src="/resharper-cpp/features/screenshots/20181/debug-step-filters.gif" src="/resharper-cpp/features/screenshots/20181/debug-step-filters.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Debug step filters" title="Debug step filters">Debug step filters
                            <span class="badge">Ultimate</span>
</h3>
<p><strong>Step filters</strong> is the latest addition to the host of features provided by
                            <span class="text-nowrap">ReSharper C++</span> for debugging. When you invoke <em>Step Into</em>,
                            the Visual Studio debugger
                            will normally step into all the functions that are called from the current statement. However,
                            some of the functions are either trivial or so well tested, that you don’t want to step
                            into them. This is where <em>step filters</em> come in: you can specify
                            functions that should always be stepped over by the debugger.</p>
<p>ReSharper C++ comes with a predefined collection of step filters for the standard library,
                            but you can always add new ones.</p>
<p><a href="/resharper-cpp/whatsnew">Learn more about <span class="text-nowrap">ReSharper C++ 2018.1</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Includes analyzer" src="/resharper-cpp/features/screenshots/20181/includes-analyzer.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Includes analyzer" title="Includes analyzer">Includes analyzer
                            <span class="badge">Ultimate</span>
</h3>
<p>Compilation time is one of the biggest problems in large real-world C++ projects.
                            <span class="text-nowrap">ReSharper C++</span> 2018.1 introduces the <strong>includes analyzer</strong>,
                            a new code inspection tool which helps you gauge which header files in your project contribute
                            the most in terms of lines of code to the total compilation workload. To use it, invoke one of
                            the <em>ReSharper | Inspect | Analyze Includes in …</em> actions or select
                            <em>Analyze Includes</em> from the context menu in the <em>Solution Explorer</em>.
                            <span class="text-nowrap">ReSharper C++</span> will analyze the files in the given scope and
                            give a report in a dedicated tool window.</p>
<p><a href="/resharper-cpp/whatsnew">Learn more about <span class="text-nowrap">ReSharper C++ 2018.1</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2017-3" id="v2017-3">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2017.3</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Debugger features in ReSharper" src="/resharper/features/screenshots/20173/debugger-in-the-editor.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Debugger features">Debugger features</h3>
<p>ReSharper brings one of <a href="/rider/">Rider</a>'s debugging features to Visual Studio: local variables,
                            current line expressions, and function return values are now displayed in the editor.
                            This provides immediate feedback during debugging sessions without leaving the code editor.
                        </p>
<p>
                            ReSharper also comes with its own debugger DataTips that enable you to search for any
                            value. Just start typing, and get search results right there and then.
                        </p>
<p>See also:</p>
<ul>
<li>
<a href="https://blog.jetbrains.com/dotnet/2017/11/21/resharper-2017-3-brings-debugger-editor/" target="_blank">ReSharper brings the debugger into the editor</a>
</li>
<li>
<a href="https://blog.jetbrains.com/dotnet/2017/12/04/debugger-features-resharper/" target="_blank">More debugger features in ReSharper</a>
</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Performance Guide" src="/resharper/features/screenshots/20173/performance-guide.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Performance Guide">Performance Guide</h3>
<p>ReSharper's Performance Guide collects Visual Studio and ReSharper settings that could
                            negatively affect performance,
                            and helps you adjust them in a centralized manner to improve the overall IDE responsiveness.
                        </p>
<p>
                            Performance Guide can be found in ReSharper's options, under <span class="menu-path">Environment |
                            Performance Guide</span>.
                        </p>
<p>The feature is inspired by an extensive ReSharper web help article which collects and
                            prioritizes known performance improvement recipes.</p>
<p>See also:</p>
<ul>
<li>
<a href="https://blog.jetbrains.com/dotnet/2017/11/30/performance-guide-visual-studio-resharper-2017-3/" target="_blank">Performance Guide for Visual Studio in ReSharper 2017.3</a>
</li>
<li>
<a href="/help/resharper/Speeding_Up_ReSharper.html" target="_blank">Speeding up ReSharper (and Visual Studio)</a>
</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Huge code formatting engine update" src="/resharper/features/screenshots/20173/formatter.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code formatter update" title="Code formatter update">Huge code formatting engine update</h3>
<p>The code formatting engine has been extended with a lot of new settings for more flexible formatting
                            and to cover more use cases:</p>
<ul>
<li>Option to keep extra space inside (to respect user alignment around <span class="text-nowrap">existing <code>=</code>)</span></li>
<li>Options to outdent binary operators, dots and commas</li>
<li>Option "Nested ternary expression style"</li>
<li>Option to insert blank lines before/after statements, depending on their contents</li>
<li>Improve alignment of nested binary expressions and chained method calls</li>
<li>Line Breaks and Wrapping options to place attributes on same line/previous line, specify arrangement of attributes, …</li>
<li>Options to specify single-line/multi-line formatting for expression-bodied members</li>
<li>Options for embedded blocks of code</li>
<li>HTML formatter has new options for linebreaks before multiline elements or even before all elements.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Aligning code in columns" src="/resharper/features/screenshots/20173/aligning-code-in-columns.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Column alignment" title="Column alignment">Aligning code in columns</h3>
<p>We have implemented a set of popular feature requests around aligning code. There were
                            requests to align equal operands, to implement outdenting and make code using the ternary
                            operator look nicer, and several other requests to help make code more readable.</p>
<p>Some developers like to have properties in a class aligned in columns, e.g. the
                            <span class="text-nowrap"><code>{ get; set; }</code></span>
                            starting in the same column. Others like to align assignments in columns. ReSharper 2017.3
                            now supports all of those flavors!</p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2017/11/28/aligning-code-columns-resharper-rider/">
                                Aligning code in columns with ReSharper and Rider</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Enable/disable formatter on selected blocks" src="/resharper/features/screenshots/20173/disable-formatter.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Disable formatter" title="Disable formatter">Enable/disable formatter on selected blocks</h3>
<p>In this release, ReSharper prevents code formatting from running on a block of code surrounded by specific comments.
                            There were many users who wanted to use different formatting styles for different blocks of code,
                            or disable formatting altogether. You can now prevent unwanted changes to your unique hand-made formatting!
                        </p>
<p>
                            Also, there is now a way to override specific settings for a block of code, instead of disabling the
                            whole formatter, by surrounding the block with a comment.
                        </p>
<p>To learn more, see
                            <a href="https://blog.jetbrains.com/dotnet/2017/11/27/different-code-styles-different-code-blocks-resharper-rider/">
                                Different code styles for different code blocks in ReSharper and Rider</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<a class="js-popup popup _with-icon _show-img" href="/resharper/features/screenshots/20173/extract-method-tuples.png" title="Improved Extract Method refactoring">
<img alt="Improved Extract Method refactoring" src="/resharper/features/screenshots/20173/extract-method-tuples-thumbnail.png">
</a>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Extract Method" title="Extract Method">Improved Extract Method refactoring</h3>
<p>A revised Extract Method refactoring levels up its support for C#&nbsp;6 and C#&nbsp;7. Specifically, support for local functions has been added, there's now an option to return value tuples instead of out parameters, and the refactoring now works in expression-bodied members.</p>
<p>To learn more, see <a href="https://blog.jetbrains.com/dotnet/2017/12/14/resharpers-extract-method-refactoring-better-c-6-c-7-support/">ReSharper's Extract Method refactoring with better C#&nbsp;6 and C#&nbsp;7 support</a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Create and navigate to breakpoints/tracepoints easily" class="js-gif" data-gif-src="/resharper/features/screenshots/20173/create-navigate-breakpoint.gif" src="/resharper/features/screenshots/20173/create-navigate-breakpoint.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Go to breakpoints" title="Go to breakpoints">Create and navigate to breakpoints/tracepoints efficiently</h3>
<p>ReSharper 2017.3 introduces creating breakpoints or tracepoints right from search results in the
                            <span class="ui-control">Find Results</span> window.
                            You can quickly generate breakpoints for all the occurrences of a code entity you would like to debug.
                        </p>
<p>
                            Also, the new release adds a new <span class="ui-control">Breakpoints</span>
                            menu which shows you all the available breakpoints/tracepoints
                            in the solution. The menu supports searching/deleting any of them directly or opening the list in a separate tool window.
                        </p>
<p>
                            The new <span class="ui-control">R# Breakpoints</span>
                            tool window supports a lot of actions with breakpoints/tracepoints:
                        </p>
<ul>
<li>Grouping in different ways (file/folder/project/type/member).</li>
<li>Removing/disabling/enabling a single item or a group of items.</li>
<li>Searching for them.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<a class="js-popup popup _with-icon _show-img" href="/resharper/features/screenshots/20173/find-usages-multiline.png" title="Find Usages/Call Tracking update">
<img alt="Find Usages/Call Tracking update" src="/resharper/features/screenshots/20173/find-usages-multiline-thumbnail.png">
</a>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Find Usages UI" title="Find Usages UI">Find Usages/Call Tracking update</h3>
<p><span class="ui-control">Find Results</span> tool window brings more love to multi-line occurrences:
                            the presentation has been changed to show context as a single line in the result tree.
                            Now it is easy to see multiline formatted occurrences in the list of search results.</p>
<p>The updated <span class="ui-control">Call Tracking</span> tool window helps keep focus by allowing to
                            remove calls that you have already reviewed.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Linking to external resources in to-do items" class="js-gif" data-gif-src="/resharper/features/screenshots/20173/todo-links.gif" src="/resharper/features/screenshots/20173/todo-links.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="LInks in to-do" title="LInks in to-do">Linking to external resources in to-do items</h3>
<p>To-do patterns get a URL field: it creates a link in your code to navigate to external
                            resources by <kbd>Ctrl</kbd><kbd>Click</kbd> on a to-do item or via <kbd>Alt</kbd><kbd>Enter</kbd>. It helps you keep your to-do comments brief
                            and straightforward: no full URLs, only an issue ID.</p>
<p>
                            Links in to-do items support the <em>Peek Preview</em>
                            feature to display the linked issue inline in the editor. Also, you
                            can easily locate the to-do item in the <span class="ui-control">To-do Explorer</span>
                            via <kbd>Alt</kbd><kbd>Enter</kbd> menu.
                        </p>
<p>
                            Finally, a new filter in the <span class="ui-control">To-do Explorer</span>
                            allows you to select multiple patterns.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="New C# typing assists" class="js-gif" data-gif-src="/resharper/features/screenshots/20173/typing-assists-comment.gif" src="/resharper/features/screenshots/20173/typing-assists-comment.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="New C# typing assists">New C# typing assists</h3>
<p>We have added more typing assists in C# to help you:</p>
<ul>
<li>Automatically generate <code>*/</code> for a new multiline comment by hitting
                                <kbd>Enter</kbd> and inserting <code>*</code> for a new line.</li>
<li>Indent a method in chained method calls after typing a dot.</li>
<li>Surround a code selection by typing a brace or a parenthesis.</li>
</ul>
<p>In a related change, smart indent on <kbd>Enter</kbd> is now calculated by ReSharper, respecting your indenting and alignment preferences defined in ReSharper options.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Tuples in VB.NET" src="/resharper/features/screenshots/20173/value-tuples-vb.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Tuples in VB.NET">Tuples in VB.NET</h3>
<p>ReSharper now understands the tuple syntax introduced in VB.NET 15:
                            no more bogus red code when you use them, and IntelliSense does not interfere with your typing.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Enhanced Preview panel in tool windows" src="/resharper/features/screenshots/20173/preview-panel.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Preview pane" title="Preview pane">Enhanced Preview pane in tool windows</h3>
<p>This release has integrated a refreshed Preview pane into most ReSharper windows
                            such as <span class="ui-control">Find Results</span> and
                            <span class="ui-control">Options</span>.</p>
<p>In <span class="ui-control">Find Results</span>, the code in the Preview pane looks more natural:
                            keywords and strings are highlighted, identifier colors are applied, font settings and scaling
                            are inherited from Visual Studio's text editor settings.</p>
<p>On formatter pages in ReSharper Options, the pane always displays whitespaces and tabs to show you
                            everything you need to know about the selected formatting style.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="More ReSharper updates" src="/resharper/features/screenshots/20173/peek-preview-vs2017.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More ReSharper updates">More ReSharper updates</h3>
<p>Other updates to ReSharper include the following:</p>
<ul>
<li><kbd>Alt</kbd><kbd>Enter</kbd> menu does not wait for the file analysis to finish, it appears immediately.</li>
<li>For TypeScript, we've improved the performance of type guards support, changes in npm modules are now tracked, and auto-completion is available for imported paths.</li>
<li>Peek Definition is supported in <span class="text-nowrap">Visual Studio</span> 2015 and 2017.</li>
<li>New code generation action is available to create deconstructors from selected fields/properties when you use C#&nbsp;7.0.</li>
<li><code>&lt;inheritdoc/&gt;</code> support comes to VB.NET.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Support for async calls" src="/profiler/whatsnew/img/async_calls_support.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Profiling async code" title="Profiling async code">
                            Profiling async code <span class="badge">Ultimate</span>
</h3>
<p>
                            The downside of asynchronous code is it's extremely difficult to profile it and analyze
                            its performance.
                        </p>
<p>
                            dotTrace 2017.3 dramatically simplifies the analysis of asynchronous code. It marks all
                            <code>async</code> call nodes in the <span class="ui-control">Call Tree</span>
                            and groups the corresponding <code>await</code> time and continuation
                            code under that node. This means that you can quickly find all "parts" of an asynchronous
                            call in one place instead of searching in different call stacks.
                        </p>
<p>
<a href="/profiler/whatsnew">Learn more about <span class="text-nowrap">dotTrace 2017.3</span>.</a>
</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Clang-Tidy integration and more ReSharper C++ updates" class="js-gif" data-gif-src="/resharper-cpp/features/screenshots/20173/clang_tidy.gif" src="/resharper-cpp/features/screenshots/20173/clang_tidy_preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="ReSharper C++" title="ReSharper C++">ReSharper C++ updates <span class="badge">ReSharper C++ updates</span> <span class="badge">Ultimate</span></h3>
<p>ReSharper C++ 2017.3 brings the same debugger features as
                            the mainline ReSharper, improves its language understanding including the
                            C++17 and C++14 specification, integrates Clang-tidy,
                            adds more code inspections, context actions, and formatting
                                options, and supports Catch2 in its unit test runner.</p>
<p>
<a href="/resharper-cpp/whatsnew"><span class="text-nowrap">Learn more about ReSharper C++ 2017.3</span>.</a>
</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2017-2" id="v2017-2">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2017.2</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="ReSharper and Razor Pages" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/razor-pages-support.gif" src="/resharper/features/screenshots/20172/razor-pages-support-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title=".NET Core 2.0" title=".NET Core 2.0">.NET Core 2.0
                        </h3>
<p>Following a preview period, .NET Core 2.0 went live with the release of
                            <span class="text-nowrap">Visual Studio 2017 15.3.</span>
</p>
<p>With ReSharper 2017.2, you can safely use your favorite code inspections, navigation actions
                            and refactorings with .NET Core 2.0 projects. If you're a web developer, expect ReSharper to
                            work in ASP.NET Core Razor Pages projects as well as in MVC-based web applications.</p>
<p>If you've had issues unit testing your .NET Core applications with prior ReSharper releases,
                            note that the unit test runner now supports NUnit in .NET Core projects (both 1.1 and 2.0),
                            and ensures that you can run both MSTest and xUnit.net in .NET Core 2.0 projects.</p>
<p>Last but not least, ReSharper's Solution Builder now supports .NET Core projects, helping you
                            reduce the time you spend recompiling your applications.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Transform multiple if-statements into single switch statement with patterns" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/convert-to-switch.gif" src="/resharper/features/screenshots/20172/convert-to-switch-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Improved C# 7.0 support">Improved C#&nbsp;7.0 support</h3>
<p>ReSharper's support for C#&nbsp;7.0 gets better with every release. In this release cycle, we have
                            polished the way ReSharper handles <strong>pattern matching</strong>:</p>
<ul>
<li>The <em>switch</em> postfix template is now available on variables of non-sealed
                                reference types.
                            </li>
<li>A new context action, <em>Generate type patterns</em>, helps easily generate switch
                                cases for selected types.
                            </li>
<li>The <em>Convert to switch</em> quick-fix has been completely reworked to transform multiple
                                <code>if</code> statements into a single <code>switch</code> statement with patterns.
                            </li>
</ul>
<p>ReSharper can now suggest using <code>var</code> (or, depending on your code style, the use
                            of explicit types) in <strong>out variables</strong>. In addition, it adds inspections and
                            quick-fixes to introduce out variables instead of variables that are only used
                            for method calls with out parameters.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Default literal" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/default-literal.gif" src="/resharper/features/screenshots/20172/default-literal-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Understanding C# 7.1">Understanding C#&nbsp;7.1</h3>
<p>Visual Studio 2017 15.3 introduced C#&nbsp;7.1, and ReSharper is quick to catch up with its language features.
                            For example, C#&nbsp;7.1 adds the <code>default</code> literal that can be used instead of
                            the <code>default(T)</code> expression, inferring target type based on usage context. ReSharper recognizes the
                            <code>default</code> literal syntax, provides an inspection when <code>default(T)</code>
                            is used, and suggests a quick-fix to remove redundant type specification.
                        </p>
<p>ReSharper also supports <a class="_external" href="https://github.com/dotnet/csharplang/blob/master/proposals/csharp-7.1/infer-tuple-names.md">tuple
                            projection initializers</a> with an inspection that reveals redundant tuple value component names when they can be
                            inferred from initializer.
                        </p>
<p>Finally, ReSharper understands <code>async main</code> and <a class="_external" href="https://github.com/dotnet/csharplang/blob/master/proposals/generics-pattern-match.md">pattern matching with generics</a>.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Adding the explicit .AsEnumerable() to the call" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/conversion-to-IEnumerable.gif" src="/resharper/features/screenshots/20172/conversion-to-IEnumerable-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="New IEnumerable inspections">New IEnumerable inspections</h3>
<p>ReSharper's set of <code>IEnumerable</code> inspections was extended to accommodate new scenarios:</p>
<ul>
<li>The <em>Possible multiple enumeration</em> code inspection can now consider types
                                derived from <code>IOrderedEnumerable</code> and <code>ParallelQuery</code>.
                            </li>
<li>A new code inspection detects possibly unintended transformation from
                                <code>IQueryable</code> to <code>IEnumerable</code>.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Checking redundant value tuple component name" src="/resharper/features/screenshots/20172/redundant-explicit-tuple-component-name.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More code inspections and context actions">More code inspections and context actions</h3>
<p>In C#&nbsp;7.1, a value tuple's element names are inferred, and ReSharper will help you spot
                            redundant value tuple component names.</p>
<p>The <em>Introduce auto-property from parameter</em> quick-fix already allowed us to introduce
                            a get-only auto-property with extensive set of options like adding a private setter or
                            making it a public mutable property. Now, the <em>Initialize auto-property from parameter</em>
                            context action is aligned with the quick-fix, providing the same extensive set of options.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<a class="js-popup popup _with-icon _show-img" href="/resharper/features/screenshots/20172/null-checking-options-thumbnail.png" title="Null checking options menu">
<img alt="Null checking options menu" src="/resharper/features/screenshots/20172/null-checking-options.png">
</a>
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Null checking preferences">Null checking preferences</h3>
<p>There are many ways of checking for <code>null</code> values, so what if you don't like the
                            way ReSharper introduces null checks when it generates code?</p>
<p>In ReSharper 2017.2, we have added a new options page, <em>Null checking</em>,
                                where the priority of <code>null</code> checking
                            patterns used by quick-fixes, context actions and code generation actions can be
                            configured. You can even create your own custom checks! If you're using the
                                <em>Check parameter for null</em> context action, check out its new submenu item,
                                <em>Configure null-check pattern</em>, which helps you access this new page without
                                digging through ReSharper's <span class="ui-element">Options</span> dialog.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Match elements containing words in the target query in any order" src="/resharper/features/screenshots/20172/match-elements-in-any-order.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigation and search" title="Navigation and search">Navigation and search
                            improvements</h3>
<p><em>Go to Everything</em> and other navigation actions are now able to match elements
                            containing words in the target query in <strong>any order</strong>: for example, a search for
                            <em>exactMatching</em> will match <code>isMatchingExactly</code>.</p>
<p>On the other hand, there's now <strong>exact search</strong> that works how you would expect from
                            a search engine: looking up <em>"Collection"</em> will return <code>Collection</code> but will
                            <em>not</em> return <code>FilteredCollection</code>, <code>IterateCollection()</code>
                            etc. However, while using exact search to filter out compound names, you can still use
                            wildcard symbols <code>*</code> and <code>?</code> to allow exactly as much variation
                            as you need.</p>
<p>On a different note, <em>Go to text</em> is now integrated in <em>Go to Everything</em>
                            (<kbd>Ctrl</kbd><kbd>T</kbd>): if there's no code that corresponds to your search term, ReSharper will
                            start looking for <strong>text</strong>
                            instead.</p>
<p>In addition, you can now search for <strong>extension methods</strong>
                            using the dot separator: <code>Class.ExtensionMethod</code>.</p>
<p>Finally, ReSharper 2017.2 brings a new shortcut to explore search results in the <em>Find
                            Results</em> window. Press <kbd>Shift</kbd><kbd>Enter</kbd> instead of <kbd>+</kbd> on the numeric
                            keypad.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Navigate to file nearby" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/navigate-file-nearby.gif" src="/resharper/features/screenshots/20172/navigate-file-nearby-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigate to file nearby">Navigate to file nearby</h3>
<p>Contextual navigation in ReSharper 2017.2 received a boost as well: using the
                            <em>Navigate To</em> menu, you can now look at and navigate to files that are adjacent to the
                            current file in the structure of your project: browse folders and files in the same
                            directory level as the current file, easily jump to these files or create new ones.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Generate cref attribute in the inheritdoc tag" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/inheiritdoc-generate-cref-attribute.gif" src="/resharper/features/screenshots/20172/inheiritdoc-generate-cref-attribute-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="XML doc inheritance" title="XML doc inheritance">&lt;inheritdoc/&gt;
                            support improvements</h3>
<p>New inspections were introduced to support the usage of <code>&lt;inheritdoc/&gt;</code> in XML documentation.</p>
<p>ReSharper detects when there are multiple candidates for inherited documentation, shows
                            a warning and suggests a quick-fix to insert a <code>cref</code> reference.
                            In the generated <code>cref</code> attribute, ReSharper will conveniently show the completion
                            list with all possible types to reference.</p>
<p>In addition, a warning is now shown when a derived class overrides documentation
                            of its base class.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Сonvert an expression bodied member into a block body" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/typing-assist-expression-block.gif" src="/resharper/features/screenshots/20172/typing-assist-expression-block-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="New C# typing assists">New C# typing assists
                        </h3>
<ul>
<li>ReSharper allows you to quickly mark arguments with <code>NotNull</code> and <code>CanBeNull</code>
                                attributes
                                without actually typing the whole attribute name. Typing <code>!</code> or
                                <code>?</code> after a type name, name in parameter or member
                                declaration inserts a <code>NotNull</code> or <code>CanBeNull</code> annotation,
                                respectively. If a name is already marked with <code>NotNull</code>, typing
                                <code>!</code> automatically adds a null check at the beginning of the method's body.
                            </li>
<li>Typing <code>{</code> after <code>=></code> quickly transforms an expression into a block
                                of code in curly braces.
                            </li>
<li>Pressing <kbd>Enter</kbd> ahead of a closing brace will leave the caret on the same
                                line but shift it to the right by one indent.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Inline type alias refactoring in TypeScript" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/inline-type-alias.gif" src="/resharper/features/screenshots/20172/inline-type-alias-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="TypeScript, JavaScript, JSON" title="TypeScript, JavaScript, JSON">
                            TypeScript, JavaScript, JSON support improvements</h3>
<ul>
<li>Full support for TypeScript 2.3, including async iterators, optional generics, overload
                                resolution for stateless JSX components, contextual <code>this</code> for object
                                literals, and the <span class="text-nowrap"><code>--strict</code></span>
                                option.
                            </li>
<li>TypeScript 2.4: support for enums with string values and mixed string/number values,
                                improved support of generic inference from contextual type returns and generic
                                contextual signatures.
                            </li>
<li>Improved <em>Find Usages</em> and <em>Rename</em> for mapped type members in TypeScript.
                            </li>
<li>New <em>Introduce type alias</em> and <em>Inline type alias</em> refactorings in
                                TypeScript.
                            </li>
<li>Improved performance of code completion in pure JavaScript.</li>
<li>Improved JSON support, including Quick Documentation in JSON and support for scoped packages in <code>package.json</code>:
                                code completion, tooltips and Quick Documentation are now available in these packages.
                            </li>
<li>Language injections in literals: injected XML, injected path references in C# and
                                JavaScript/TypeScript.
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Support for Angular 2 components in HTML" class="js-gif" data-gif-src="/resharper/features/screenshots/20172/angular-2-support.gif" src="/resharper/features/screenshots/20172/angular-2-support-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Angular support">Angular support</h3>
<p>
                            ReSharper 2017.2 supports Angular input/output aliases and attribute directives. Angular 2
                            components added via NPM are now supported as well.</p>
<p>ReSharper provides code completion, shows Quick Documentation and helps navigate to component
                            declarations. Note that <em>Support Angular markup in HTML pages</em> must be configured
                            in the ReSharper options under <span class="ui-control">HTML | JavaScript and Frameworks</span>
                            for this to work.</p>
<p>In Angular 4, ReSharper 2017.2 adds&nbsp;support for <code>; else</code> in&nbsp;<code>*ngIf</code>,
                            as well as for variable assignments (e.g. <code>people as person</code>) in both
                            <code>*ngIf</code> and <code>*ngFor</code>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="ReSharper interactive tutorials" src="/resharper/features/screenshots/20172/resharper-tutorial-step.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Interactive tutorials" title="Interactive tutorials">ReSharper interactive
                            tutorials</h3>
<p>There's always a chance that some new cool ReSharper feature coming in the latest
                            release may slip through the cracks and fail to make it into your coding routine.</p>
<p>ReSharper 2017.2 helps you learn as much as possible about its updates by integrating
                                the ReSharper Tutorials plugin. For an easy way to try a feature instead of only reading
                                about it, go to <span class="ui-control">ReSharper | Help |
                                Tutorials...</span> and choose one of the available tutorials.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Make properties mutable" src="/resharper/features/screenshots/20172/generate-make-properties-mutable.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="More ReSharper updates"><span class="text-nowrap">More ReSharper updates</span>
</h3>
<p>Other updates to ReSharper include the following:</p>
<ul>
<li>Asynchronous refresh in the <em>Find Results</em> tool window.</li>
<li>A new option to make properties mutable when implementing interfaces with get-only
                                properties.
                            </li>
<li>Improved code completion response time.</li>
<li>Smart indent on <kbd>Enter</kbd> to improve code formatting. This feature is disabled by
                                default but can be configured under <span class="ui-control">ReSharper | Options |
                                    Environment | Editor | Editor Behavior | Typing assist</span>.
                            </li>
<li><em>Enable Debugging</em> action in the context menu of Visual Studio's
                                <em>Modules</em> tool window and ReSharper's <em>Process Explorer</em>
                                tool window (this action replaces <em>Generate PDB</em>).
                            </li>
<li>You can now set breakpoints in decompiled code.</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Expression result unused inspection" class="js-gif" data-gif-src="/resharper-cpp/features/screenshots/20172/unused-return-value.gif" src="/resharper-cpp/features/screenshots/20172/unused-return-value-preview.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="ReSharper C++ updates" title="ReSharper C++ updates">
                            ReSharper C++ updates <span class="badge">Ultimate</span></h3>
<p>ReSharper C++ 2017.2 is mostly focused on better language understanding and supporting
                            features from C++11 and C++17. Other changes include enhancements in code formatter and
                            navigation, improved performance, new code inspections and quick-fixes.</p>
<p>Learn more about <a href="/resharper-cpp/whatsnew/"><span class="text-nowrap">ReSharper C++ 2017.2</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Importing memory dumps" src="/dotmemory/whatsnew/img/dotmemory_import_dump.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Analyzing memory dumps" title="Analyzing memory dumps">
                            Analyzing memory dumps <span class="badge">Ultimate</span></h3>
<p>
                            dotMemory 2017.2 lets you import raw Windows memory dumps (typically, you
                            get them using Task Manager or Process Explorer)
                            and analyze them using the entire range of dotMemory's functionality.
                        </p>
<p>Learn more about <a href="/dotmemory/whatsnew"><span class="text-nowrap">dotMemory 2017.2</span></a>.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>
<section class="section-content _bg-medium version-2017-1" id="v2017-1">
<div class="wt-container article-content">
<div class="wt-row wt-row_size_m">
<div class="wt-col-12">
<h2>ReSharper 2017.1</h2>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Switching switching a file's target framework context" src="/resharper/features/screenshots/20171/target_framework.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Visual Studio 2017" title="Visual Studio 2017">Visual Studio 2017 RTM support</h3>
<p>Full support for Visual Studio 2017 new features is finally here. You can now work with
                            solutions loaded in a lightweight mode. When you use the <em>Open Folder</em> option,
                            ReSharper sees all
                            files in the folder and supports .xml and .js file types. <a href="/help/resharper/Refactorings__Move__Type_to_Folder.html">Move
                                to Folder</a> refactoring works in this mode.</p>
<p>ReSharper respects the current target framework context. This is set by the drop-down
                            at the top of the editor window, and can change settings such as the assemblies being
                            referenced, as well as symbols defined in the build and pre-processor.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Convert to local function" class="js-gif" data-gif-src="/resharper/features/screenshots/20171/qf_local_function.gif" src="/resharper/features/screenshots/20171/qf_local_function.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="C# 7 support">C#&nbsp;7 support</h3>
<p>ReSharper receives a lot of new inspections to comply with the C#&nbsp;7 compiler. For example, it
                            can detect
                            typos in tuple variable names when overriding a method or implementing an interface.</p>
<p>ReSharper supports local functions with a new quick-fix to <em>Convert a read-only delegate
                            variable into a local function</em>, as well as two new context actions:</p>
<ul>
<li>Convert lambda expression or anonymous method into a local function</li>
<li>Convert local function into a regular method</li>
</ul>
<p>The <em>Join null check with assignment</em> quick-fix makes the code
                            more readable by combining the assignment, the null-coalescing operator, and throw. The
                            existing
                            context action <em>Convert to '?:' operator</em> and the <code>.throw</code> postfix
                            template
                            also support C#&nbsp;7 throw expressions. </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Run unit tests in all target frameworks" src="/resharper/features/screenshots/20171/unit_test_targ_framework.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Unit testing">Unit testing</h3>
<p>ReSharper’s unit testing works in both <em>project.json</em>- and <em>.csproj</em>-based
                            projects in Visual
                            Studio 2017 RTM. It discovers and runs MSTest and xUnit tests and supports code coverage and
                            profiling as well as targeting multiple frameworks. NUnit tests that target <span class="text-nowrap">.NET 4x</span>
                            frameworks are supported. There’s also DataRow support for <span class="text-nowrap">MSTest
                                v2</span>.</p>
<p>Note that ReSharper currently doesn't support continuous testing for .NET Core unit tests.
                            This will be fixed in the next updates.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="File Formatting Info" src="/resharper/features/screenshots/20171/editor_config.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="EditorConfig support">EditorConfig support</h3>
<p>EditorConfig support is enabled by default. ReSharper understands <a href="/help/resharper/Using_EditorConfig.html#standard">standard
                            EditorConfig
                            properties</a>, most of <a href="/help/resharper/Using_EditorConfig.html#roslyn">Roslyn
                            EditorConfig properties</a>, and provides a rich set of <a href="/help/resharper/EditorConfig_Index.html">custom
                            EditorConfig properties</a> for much more granular configuration of formatting
                            rules. This means that you can maintain the entire configuration of formatting rules in
                            EditorConfig files.</p>
<p>The <em>File Formatting Info</em> window displays the scopes and properties defined in all
                            active
                            <code>.editorconfig</code> files. This window also shows the source of indentation settings
                            and its
                            value, and the status of indent autodetection.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Tabs and indents settings" src="/resharper/features/screenshots/20171/tabs_and_indents.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Indent autodetection and code style">Indent autodetection and code style
                            improvements</h3>
<p>ReSharper’s <a href="/help/resharper/Sharing_Configuration_Options.html">layered
                            settings</a> feature is a great tool to maintain a consistent code style if
                            most of your team members use ReSharper. Now it is extended with <em>Tabs and Indents</em>
                            settings
                            for all supported languages.</p>
<p>When you reformat a part of code in a file, or when code is auto-formatted on editing or
                            pasting, ReSharper can calculate and apply indentation
                            based on the existing indents in that file. This feature comes in handy when you want to
                            contribute to existing projects where indentation differs from your settings.</p>
<p>Contextual configuration of formatting rules is available in С#, C++, JavaScript and
                            TypeScript. Press <kbd>Alt</kbd><kbd>Enter</kbd> over the selected block
                            of code
                            that you need to reformat, and then choose <span class="menu-path">Format Selection | Configure</span> in the actions list to see
                            all formatting rules that affect the code.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Code cleanup dialog box" src="/resharper/features/screenshots/20171/code_cleanup.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code cleanup, new code style and formatting options">Code cleanup, new code style and formatting options</h3>
<p>ReSharper’s <em>Code Cleanup</em> gets usability improvements. Now you can create and
                            configure your
                            custom task-specific profiles right in the <em>Code Cleanup</em> dialog box, simply by
                            pressing
                            <kbd>Ctrl</kbd><kbd>E</kbd>,<kbd>C</kbd>.</p>
<p>ReSharper applies its formatting rules to any code you paste. The <em>Reindent</em> option
                            that affects only the indentation is
                            set by
                            default and you can change it on the <span class="ui-control">Editor Behavior</span>
                            options page.</p>
<p>ReSharper introduces new code style settings for C# type members bodies, allowing you
                            to choose between always using a body block, with braces, or using the expression
                            format.</p>
<p>Finally, we've improved C# code formatting engine and introduced new formatting options:</p>
<ul>
<li>The new wrapping engine now handles the alignment correctly</li>
<li>Comma-first wrapping style is supported</li>
<li>Set spaces before and inside the parentheses of 'nameof'</li>
<li>Choose preferred wrapping style for chained binary expressions</li>
<li>Configurable line breaks in a single 'case' statement</li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Grouping by type of usage and new filter options" src="/resharper/features/screenshots/20171/find_results.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Navigation and search">Navigation and search</h3>
<p>The <span class="ui-control">Find Results</span> window gets a new option to group search
                            results by kind of usage, new filters to select occurrences of a specific usage, and using
                            quotes to search for exact matches.</p>
<p>ReSharper's <span class="ui-control">Search & Navigation</span> page adds a new option to
                            open files in the preview tab from
                            everywhere. This option is turned off by default.
                        </p>
<p>The <span class="ui-control">Go to Everything</span> and <span class="ui-control">Go to Text</span> popups support inline commands for advanced
                            filtering
                            of search results.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Rename refactoring in Angular" class="js-gif" data-gif-src="/resharper/features/screenshots/20171/angular_rename.gif" src="/resharper/features/screenshots/20171/angular_rename.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Angular 2" title="Angular 2">Angular 2 templates syntax</h3>
<p>ReSharper understands the following elements of Angular 2 templates syntax: template
                            expressions, template statements, NgFor directive and template variables. Support is
                            implemented for the <code>template:</code> property in Angular <code>@Component</code>
                            decorator as well as for pure
                            HTML referenced by <code>templateUrl:</code> property in <code>@Component</code>. Only
                            relative paths are supported in <code>templateUrl</code>. For HTML pages, Angular markup is
                            switched off by default and can be enabled in ReSharper Options (<span class="menu-path">Code Editing | HTML |
                                Editor</span>). </p>
<p>Code completion works for Angular attributes and component tags, as well as for
                            <code>[attr.</code>,
                            <code>[style.</code> and <code>[class.</code>. Component attributes receive support for the
                            <em>Go to Declaration</em> (<kbd>F12</kbd>)
                            command. The <em>Rename</em> refactoring works for component tags and for 'foo' in <code>[class.foo]</code>.
                        </p>
<p>Note that Angular 1 is not yet supported. You can use the <a href="https://resharper-plugins.jetbrains.com/packages/JetBrains.AngularJS/">AngularJS
                            plugin</a> for code completion
                            and live templates, if <em>Support Angular markup in HTML pages</em> is set to 'None' in
                            ReSharper
                            options.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Finde usages of the object rest property" class="js-gif" data-gif-src="/resharper/features/screenshots/20171/TS_find_usages.gif" src="/resharper/features/screenshots/20171/TS_find_usages.png">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="TypeScript and JavaScript" title="TypeScript and JavaScript">TypeScript and
                            JavaScript support</h3>
<ul>
<li>Full support for TypeScript 2.1: mapped and indexed types, object rest and spread
                                properties, updated logic for literal types, configuration inheritance, untyped imports,
                                combined types normalization, partially annotated signatures, and control flow analysis
                                for implicit any and implicit any arrays
                            </li>
<li>Initial support for TypeScript 2.2: 'object' type, JSX spread syntax and deriving
                                (extends/implements) from signatures/tuples/intersections/mapped types
                            </li>
<li>Inspection and quick-fixes for unused imports in TypeScript ES6-style imports</li>
<li><a href="/help/resharper/Postfix_Templates.html">Postfix
                                Templates</a> in JavaScript and TypeScript
                            </li>
<li>Improved relevance of code completion items in TypeScript and JavaScript</li>
<li>The <span class="ui-control">Generate Code</span> menu gets a new option to generate
                                properties or read-only properties
                                for TypeScript classes. The <span class="ui-control">Generate Overriding Members</span> command now calls 'super'
                                whenever possible
                            </li>
<li><span class="ui-control"><a href="/help/resharper/Navigation_and_Search__Navigate_from_Here__Implementing_Members.html">Navigate to Implementing Members</a></span>
                                in TypeScript
                            </li>
<li><span class="ui-control"><a href="/help/resharper/Navigation_and_Search__Navigate_from_Here__Function_Exits.html">Navigate to Function Exits</a></span>
                                in TypeScript and JavaScript
                            </li>
<li>The <em>Rename</em> refactoring in TypeScript works faster for local symbols and gets a
                                new
                                option to
                                disable dynamic search for TypeScript
                            </li>
</ul>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Context menu on status indicator" src="/resharper/features/screenshots/20171/status_indicator.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Code analysis">Code analysis</h3>
<p>ReSharper's <em>File Status Indicator</em> (the small icon at the top of the Error Stripe)
                            receives a new
                            context menu. With a right-click on the icon, you can quickly toggle not only ReSharper code
                            analysis but also identifier highlightings and Visual Studio code analysis (lightbulb and
                            squiggles). If there are code issues in the current file, you'll also see commands for
                            navigating between issues of the highest severity level. </p>
<p>Note that for large files ReSharper suspends code analysis automatically. In this case,
                            you'll see a gray Pause icon in the Status Indicator.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Control flow inspections for class fields" src="/resharper-cpp/features/screenshots/20171/cpp_uninitialised_field.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="ReSharper C++ updates" title="ReSharper C++ updates"><span class="text-nowrap">ReSharper C++</span> updates
                            <span class="badge">Ultimate</span></h3>
<p><span class="text-nowrap">ReSharper C++ 2017.1</span> finalizes Visual Studio 2017 RTM
                            support and learns to work with the <em>Open Folder</em> mode and <em>CMake</em> projects.
                            Changes also include
                            improved performance, extended set of postfix templates and code cleanup tasks, and updates
                            to
                            control flow inspections.</p>
<p>Learn more about <a href="/resharper-cpp/whatsnew/"><span class="text-nowrap">ReSharper C++</span></a> 2017.1.</p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Command-line profiler" src="/dotmemory/whatsnew/img/console_runner.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Command-line profiler" title="Command-line profiler">
                            Command-line profiler <span class="badge">Ultimate</span></h3>
<p>
                            dotMemory 2017.1 includes the <i>dotMemory.exe</i> tool that allows you to profile from the
                            command line. The tool is extremely helpful when
                            you need to automate the process of gathering memory snapshots, e.g. if you want to make
                            profiling a part of your continuous integration builds.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m wt-row-xlg_direction_column-reverse">
<div class="wt-col-6 wt-col-xlg-12">
<div class="screen-img _shadow _margin-bottom">
<img alt="Attach using drag and drop" src="/dotmemory/whatsnew/img/attach.png" width="600">
</div>
</div>
<div class="wt-col-6 wt-col-xlg-8">
<div class="features-block margin-bottom-vertical-unit-half-xlg">
<h3 class="features-block__title" data-title="Attach with drag and drop" title="Attach with drag and drop">
                            Profile running apps with drag and drop <span class="badge">Ultimate</span></h3>
<p>
                            You can now attach the profiler to running applications using drag and drop.
                            Simply drop a special icon onto the application window that you want to profile.
                        </p>
</div>
</div>
</div>
<div class="wt-row wt-row_size_m">
<div class="wt-col-4">
<div class="button-with-note">
<a class="button-with-note__button button" href="/resharper/download/download-thanks.html?code=RSU&platform=windows">Download</a>
<div class="button-with-note__note">Free 30-day
                            trial
                        </div>
</div>
</div>
</div>
</div>
</section>    </div>

            
<div class="page__footer">
    <footer class="footer" id="footer">
        <div class="wt-container">
            <div class="footer__main wt-row wt-row_size_m wt-row-sm_direction_column-reverse">
                <div class="footer__logo wt-col-inline wt-display-md-none">
                    <div class="jetbrains-logo _size-3 _full-block">
                        <svg class="sprite-img jetbrains">
                            <use xlink:href="#jetbrains" />
                        </svg>
                    </div>
                </div>

                <div class="wt-col-auto-fill wt-col-sm-12">
                    <div class="wt-row wt-row_size_xs wt-row-sm_size_m wt-offset-top-12">
                        <div class="wt-col-inline footer-skeleton-button"></div>
                        <div class="wt-col-inline footer-skeleton-button"></div>
                        <div class="wt-col-inline footer-skeleton-button"></div>
                        <div class="wt-col-inline footer-skeleton-button"></div>
                    </div>

                    <div class="footer-skeleton-text-2 wt-offset-top-24" style="max-width: 45%"></div>
                    <div class="footer-skeleton-text-2 wt-offset-top-12" style="max-width: 70%"></div>
                </div>

                <div class="wt-col-inline wt-col-sm-12 wt-col_align-self_end wt-col-sm_align-self_start">
                    <div class="wt-row wt-row_size_m wt-row_justify_end wt-row-sm_justify_start">
                        <div class="wt-col-inline footer-skeleton-button" style="min-width: 180px"></div>
                        <div class="wt-col-inline footer-skeleton-button" style="min-width: 80px"></div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
</div>
    </div>

<script>
(function () {
  function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  }

  function updateQueryStringParameter(uri, key, value) {
    var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
    var separator = uri.indexOf('?') !== -1 ? "&" : "?";
    if (uri.match(re)) {
      return uri.replace(re, '$1' + key + "=" + value + '$2');
    }
    else {
      return uri + separator + key + "=" + value;
    }
  }

  var downloadLink = document.getElementById("download-link");
  if (downloadLink != null) {
    var platform = getParameterByName('platform');
    platform = platform != null ? platform : "windows";
    var href = downloadLink.getAttribute("href");
    var code = getParameterByName("code");

    if(code != null) {
      href = updateQueryStringParameter(href, "code", code)
    }
    href = updateQueryStringParameter(href, "platform", platform);
    downloadLink.setAttribute("href", href);
  }
})();
</script><script>
(function() {
  var STORAGE_KEY_NAME = 'firefoxDisappearedSVGWorkaround';
  var STORAGE_KEY_VALUE = '1';

  var isFirefox = /firefox/i.test(navigator.userAgent);
  if (!isFirefox || isFirefox && sessionStorage.getItem(STORAGE_KEY_NAME) === STORAGE_KEY_VALUE) {
    return;
  }

  var arrayFrom = function (arrayLike) {
    return Array.prototype.slice.call(arrayLike, 0);
  };

  function workaround() {
    var uses = document.querySelectorAll('.page svg use');
    var badNodesCount = 0;

    arrayFrom(uses).forEach(function (node) {
      var rect = node.getBoundingClientRect();
      if (rect.width === 0 && rect.height === 0)
        badNodesCount++;
    });

    if (badNodesCount === uses.length) {
      sessionStorage.setItem(STORAGE_KEY_NAME, STORAGE_KEY_VALUE);
      if (typeof dataLayer !== 'undefined')
        dataLayer.push({'firefoxDisappearedSVGWorkaround': STORAGE_KEY_VALUE});

      window.location.replace(window.location.href);
    }
  }

  window.addEventListener('DOMContentLoaded', workaround);

})();
</script>      <link href="/_assets/banner-rotator.entry.07ac548a2a68a7922693.css" rel="stylesheet" type="text/css">
      <script src="/_assets/banner-rotator.entry.b9ea3aaba598786010f0.js" type="text/javascript"></script>
      
      
  <script>
(function () {

  'use strict';

  function ImagesSrcReplacer () {

    var attribute = 'data-src';
    var matches = document.querySelectorAll('img[' + attribute + ']');

    for (var i = 0, n = matches.length; i < n; i++) {

      var attrValue = matches[i].getAttribute(attribute);

      if (_isHighDensity ()) {

        var name = attrValue.substring(0, attrValue.lastIndexOf('.'));
        var extention = attrValue.substring(attrValue.lastIndexOf('.'), attrValue.length);

        matches[i].setAttribute('src', name + '@2x' + extention);

      } else {
        matches[i].setAttribute('src', attrValue)
      }
    }

    /**
     * Detect high density
     * @returns {*|boolean}
     */
    function _isHighDensity () {
      return (
      (window.matchMedia &&
      (window.matchMedia('only screen and (min-resolution: 124dpi), only screen and (min-resolution: 1.3dppx), only screen and (min-resolution: 48.8dpcm)').matches ||
       window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3)').matches)) ||
      (window.devicePixelRatio &&
       window.devicePixelRatio > 1.3));
    }
  }

  return new ImagesSrcReplacer()

}(document, window));
</script></body>
</html>
